;; -*- scheme -*-

(include "gnome-types.defs")


(define-object About
  (in-module "Gnome")
  (parent "GtkDialog")
  (c-name "GnomeAbout")
  (gtype-id "GNOME_TYPE_ABOUT")
)

(define-object App
  (in-module "Gnome")
  (parent "GtkWindow")
  (c-name "GnomeApp")
  (gtype-id "GNOME_TYPE_APP")
)

(define-object AppBar
  (in-module "Gnome")
  (parent "GtkHBox")
  (c-name "GnomeAppBar")
  (gtype-id "GNOME_TYPE_APP_BAR")
)

(define-object Client
  (in-module "Gnome")
  (parent "GtkObject")
  (c-name "GnomeClient")
  (gtype-id "GNOME_TYPE_CLIENT")
)

(define-object ColorPicker
  (in-module "Gnome")
  (parent "GtkButton")
  (c-name "GnomeColorPicker")
  (gtype-id "GNOME_TYPE_COLOR_PICKER")
)

(define-object DateEdit
  (in-module "Gnome")
  (parent "GtkHBox")
  (c-name "GnomeDateEdit")
  (gtype-id "GNOME_TYPE_DATE_EDIT")
)

(define-object Dialog
  (in-module "Gnome")
  (parent "GtkWindow")
  (c-name "GnomeDialog")
  (gtype-id "GNOME_TYPE_DIALOG")
)

(define-object Druid
  (in-module "Gnome")
  (parent "GtkContainer")
  (c-name "GnomeDruid")
  (gtype-id "GNOME_TYPE_DRUID")
  (fields
    '("GtkWidget*" "help")
    '("GtkWidget*" "back")
    '("GtkWidget*" "next")
    '("GtkWidget*" "cancel")
    '("GtkWidget*" "finish")
  )
)

(define-object DruidPage
  (in-module "Gnome")
  (parent "GtkBin")
  (c-name "GnomeDruidPage")
  (gtype-id "GNOME_TYPE_DRUID_PAGE")
)

(define-object DruidPageEdge
  (in-module "Gnome")
  (parent "GnomeDruidPage")
  (c-name "GnomeDruidPageEdge")
  (gtype-id "GNOME_TYPE_DRUID_PAGE_EDGE")
)

(define-object DruidPageStandard
  (in-module "Gnome")
  (parent "GnomeDruidPage")
  (c-name "GnomeDruidPageStandard")
  (gtype-id "GNOME_TYPE_DRUID_PAGE_STANDARD")
  (fields
    '("GtkWidget*" "vbox")
    '("gchar*" "title")
    '("GdkPixbuf*" "logo")
    '("GdkPixbuf*" "top_watermark")
    '("GdkColor" "title_foreground")
    '("GdkColor" "background")
    '("GdkColor" "logo_background")
    '("GdkColor" "contents_background")
  )
)

(define-object Entry
  (in-module "Gnome")
  (parent "GtkCombo")
  (c-name "GnomeEntry")
  (gtype-id "GNOME_TYPE_ENTRY")
)

(define-object FileEntry
  (in-module "Gnome")
  (parent "GtkVBox")
  (c-name "GnomeFileEntry")
  (gtype-id "GNOME_TYPE_FILE_ENTRY")
)

(define-object FontPicker
  (in-module "Gnome")
  (parent "GtkButton")
  (c-name "GnomeFontPicker")
  (gtype-id "GNOME_TYPE_FONT_PICKER")
)

(define-object HRef
  (in-module "Gnome")
  (parent "GtkButton")
  (c-name "GnomeHRef")
  (gtype-id "GNOME_TYPE_HREF")
)

(define-object IconEntry
  (in-module "Gnome")
  (parent "GtkVBox")
  (c-name "GnomeIconEntry")
  (gtype-id "GNOME_TYPE_ICON_ENTRY")
)

(define-object IconList
  (in-module "Gnome")
  (parent "GnomeCanvas")
  (c-name "GnomeIconList")
  (gtype-id "GNOME_TYPE_ICON_LIST")
)

(define-object IconSelection
  (in-module "Gnome")
  (parent "GtkVBox")
  (c-name "GnomeIconSelection")
  (gtype-id "GNOME_TYPE_ICON_SELECTION")
)

(define-object IconTextItem
  (in-module "Gnome")
  (parent "GnomeCanvasItem")
  (c-name "GnomeIconTextItem")
  (gtype-id "GNOME_TYPE_ICON_TEXT_ITEM")
)

(define-object MDI
  (in-module "Gnome")
  (parent "GtkObject")
  (c-name "GnomeMDI")
  (gtype-id "GNOME_TYPE_MDI")
)

(define-object MDIChild
  (in-module "Gnome")
  (parent "GtkObject")
  (c-name "GnomeMDIChild")
  (gtype-id "GNOME_TYPE_MDI_CHILD")
)

(define-object MDIGenericChild
  (in-module "Gnome")
  (parent "GnomeMDIChild")
  (c-name "GnomeMDIGenericChild")
  (gtype-id "GNOME_TYPE_MDI_GENERIC_CHILD")
)

(define-object MessageBox
  (in-module "Gnome")
  (parent "GnomeDialog")
  (c-name "GnomeMessageBox")
  (gtype-id "GNOME_TYPE_MESSAGE_BOX")
)

(define-object Pixmap
  (in-module "Gnome")
  (parent "GtkImage")
  (c-name "GnomePixmap")
  (gtype-id "GNOME_TYPE_PIXMAP")
)

(define-object PixmapEntry
  (in-module "Gnome")
  (parent "GnomeFileEntry")
  (c-name "GnomePixmapEntry")
  (gtype-id "GNOME_TYPE_PIXMAP_ENTRY")
)

(define-object PropertyBox
  (in-module "Gnome")
  (parent "GnomeDialog")
  (c-name "GnomePropertyBox")
  (gtype-id "GNOME_TYPE_PROPERTY_BOX")
)

(define-object Scores
  (in-module "Gnome")
  (parent "GtkDialog")
  (c-name "GnomeScores")
  (gtype-id "GNOME_TYPE_SCORES")
)

(define-object ThumbnailFactory
  (in-module "Gnome")
  (parent "GObject")
  (c-name "GnomeThumbnailFactory")
  (gtype-id "GNOME_TYPE_THUMBNAIL_FACTORY")
)

(define-enum UIInfoType
  (in-module "Gnome")
  (c-name "GnomeUIInfoType")
  (gtype-id "GNOME_TYPE_UI_INFO_TYPE")
  (values
    '("endofinfo" "GNOME_APP_UI_ENDOFINFO")
    '("item" "GNOME_APP_UI_ITEM")
    '("toggleitem" "GNOME_APP_UI_TOGGLEITEM")
    '("radioitems" "GNOME_APP_UI_RADIOITEMS")
    '("subtree" "GNOME_APP_UI_SUBTREE")
    '("separator" "GNOME_APP_UI_SEPARATOR")
    '("help" "GNOME_APP_UI_HELP")
    '("builder-data" "GNOME_APP_UI_BUILDER_DATA")
    '("item-configurable" "GNOME_APP_UI_ITEM_CONFIGURABLE")
    '("subtree-stock" "GNOME_APP_UI_SUBTREE_STOCK")
    '("include" "GNOME_APP_UI_INCLUDE")
  )
)

(define-enum UIInfoConfigurableTypes
  (in-module "Gnome")
  (c-name "GnomeUIInfoConfigurableTypes")
  (gtype-id "GNOME_TYPE_UI_INFO_CONFIGURABLE_TYPES")
  (values
    '("new" "GNOME_APP_CONFIGURABLE_ITEM_NEW")
    '("open" "GNOME_APP_CONFIGURABLE_ITEM_OPEN")
    '("save" "GNOME_APP_CONFIGURABLE_ITEM_SAVE")
    '("save-as" "GNOME_APP_CONFIGURABLE_ITEM_SAVE_AS")
    '("revert" "GNOME_APP_CONFIGURABLE_ITEM_REVERT")
    '("print" "GNOME_APP_CONFIGURABLE_ITEM_PRINT")
    '("print-setup" "GNOME_APP_CONFIGURABLE_ITEM_PRINT_SETUP")
    '("close" "GNOME_APP_CONFIGURABLE_ITEM_CLOSE")
    '("quit" "GNOME_APP_CONFIGURABLE_ITEM_QUIT")
    '("cut" "GNOME_APP_CONFIGURABLE_ITEM_CUT")
    '("copy" "GNOME_APP_CONFIGURABLE_ITEM_COPY")
    '("paste" "GNOME_APP_CONFIGURABLE_ITEM_PASTE")
    '("clear" "GNOME_APP_CONFIGURABLE_ITEM_CLEAR")
    '("undo" "GNOME_APP_CONFIGURABLE_ITEM_UNDO")
    '("redo" "GNOME_APP_CONFIGURABLE_ITEM_REDO")
    '("find" "GNOME_APP_CONFIGURABLE_ITEM_FIND")
    '("find-again" "GNOME_APP_CONFIGURABLE_ITEM_FIND_AGAIN")
    '("replace" "GNOME_APP_CONFIGURABLE_ITEM_REPLACE")
    '("properties" "GNOME_APP_CONFIGURABLE_ITEM_PROPERTIES")
    '("preferences" "GNOME_APP_CONFIGURABLE_ITEM_PREFERENCES")
    '("about" "GNOME_APP_CONFIGURABLE_ITEM_ABOUT")
    '("select-all" "GNOME_APP_CONFIGURABLE_ITEM_SELECT_ALL")
    '("new-window" "GNOME_APP_CONFIGURABLE_ITEM_NEW_WINDOW")
    '("close-window" "GNOME_APP_CONFIGURABLE_ITEM_CLOSE_WINDOW")
    '("new-game" "GNOME_APP_CONFIGURABLE_ITEM_NEW_GAME")
    '("pause-game" "GNOME_APP_CONFIGURABLE_ITEM_PAUSE_GAME")
    '("restart-game" "GNOME_APP_CONFIGURABLE_ITEM_RESTART_GAME")
    '("undo-move" "GNOME_APP_CONFIGURABLE_ITEM_UNDO_MOVE")
    '("redo-move" "GNOME_APP_CONFIGURABLE_ITEM_REDO_MOVE")
    '("hint" "GNOME_APP_CONFIGURABLE_ITEM_HINT")
    '("scores" "GNOME_APP_CONFIGURABLE_ITEM_SCORES")
    '("end-game" "GNOME_APP_CONFIGURABLE_ITEM_END_GAME")
  )
)

(define-enum UIPixmapType
  (in-module "Gnome")
  (c-name "GnomeUIPixmapType")
  (gtype-id "GNOME_TYPE_UI_PIXMAP_TYPE")
  (values
    '("none" "GNOME_APP_PIXMAP_NONE")
    '("stock" "GNOME_APP_PIXMAP_STOCK")
    '("data" "GNOME_APP_PIXMAP_DATA")
    '("filename" "GNOME_APP_PIXMAP_FILENAME")
  )
)

(define-enum InteractStyle
  (in-module "Gnome")
  (c-name "GnomeInteractStyle")
  (gtype-id "GNOME_TYPE_INTERACT_STYLE")
  (values
    '("none" "GNOME_INTERACT_NONE")
    '("errors" "GNOME_INTERACT_ERRORS")
    '("any" "GNOME_INTERACT_ANY")
  )
)

(define-enum DialogType
  (in-module "Gnome")
  (c-name "GnomeDialogType")
  (gtype-id "GNOME_TYPE_DIALOG_TYPE")
  (values
    '("error" "GNOME_DIALOG_ERROR")
    '("normal" "GNOME_DIALOG_NORMAL")
  )
)

(define-enum SaveStyle
  (in-module "Gnome")
  (c-name "GnomeSaveStyle")
  (gtype-id "GNOME_TYPE_SAVE_STYLE")
  (values
    '("global" "GNOME_SAVE_GLOBAL")
    '("local" "GNOME_SAVE_LOCAL")
    '("both" "GNOME_SAVE_BOTH")
  )
)

(define-enum RestartStyle
  (in-module "Gnome")
  (c-name "GnomeRestartStyle")
  (gtype-id "GNOME_TYPE_RESTART_STYLE")
  (values
    '("if-running" "GNOME_RESTART_IF_RUNNING")
    '("anyway" "GNOME_RESTART_ANYWAY")
    '("immediately" "GNOME_RESTART_IMMEDIATELY")
    '("never" "GNOME_RESTART_NEVER")
  )
)

(define-enum ClientState
  (in-module "Gnome")
  (c-name "GnomeClientState")
  (gtype-id "GNOME_TYPE_CLIENT_STATE")
  (values
    '("idle" "GNOME_CLIENT_IDLE")
    '("saving-phase-1" "GNOME_CLIENT_SAVING_PHASE_1")
    '("waiting-for-phase-2" "GNOME_CLIENT_WAITING_FOR_PHASE_2")
    '("saving-phase-2" "GNOME_CLIENT_SAVING_PHASE_2")
    '("frozen" "GNOME_CLIENT_FROZEN")
    '("disconnected" "GNOME_CLIENT_DISCONNECTED")
    '("registering" "GNOME_CLIENT_REGISTERING")
  )
)

(define-flags ClientFlags
  (in-module "Gnome")
  (c-name "GnomeClientFlags")
  (gtype-id "GNOME_TYPE_CLIENT_FLAGS")
  (values
    '("is-connected=" "GNOME_CLIENT_IS_CONNECTED=")
    '("restarted" "GNOME_CLIENT_RESTARTED")
    '("restored" "GNOME_CLIENT_RESTORED")
  )
)

(define-flags DateEditFlags
  (in-module "Gnome")
  (c-name "GnomeDateEditFlags")
  (gtype-id "GNOME_TYPE_DATE_EDIT_FLAGS")
  (values
    '("show-time" "GNOME_DATE_EDIT_SHOW_TIME")
    '("24-hr" "GNOME_DATE_EDIT_24_HR")
    '("week-starts-on-monday" "GNOME_DATE_EDIT_WEEK_STARTS_ON_MONDAY")
  )
)

(define-enum EdgePosition
  (in-module "Gnome")
  (c-name "GnomeEdgePosition")
  (gtype-id "GNOME_TYPE_EDGE_POSITION")
  (values
    '("start" "GNOME_EDGE_START")
    '("finish" "GNOME_EDGE_FINISH")
    '("other" "GNOME_EDGE_OTHER")
    '("last" "GNOME_EDGE_LAST")
  )
)

(define-enum FontPickerMode
  (in-module "Gnome")
  (c-name "GnomeFontPickerMode")
  (gtype-id "GNOME_TYPE_FONT_PICKER_MODE")
  (values
    '("pixmap" "GNOME_FONT_PICKER_MODE_PIXMAP")
    '("font-info" "GNOME_FONT_PICKER_MODE_FONT_INFO")
    '("user-widget" "GNOME_FONT_PICKER_MODE_USER_WIDGET")
    '("unknown" "GNOME_FONT_PICKER_MODE_UNKNOWN")
  )
)

(define-enum IconListMode
  (in-module "Gnome")
  (c-name "GnomeIconListMode")
  (gtype-id "GNOME_TYPE_ICON_LIST_MODE")
  (values
    '("icons" "GNOME_ICON_LIST_ICONS")
    '("text-below" "GNOME_ICON_LIST_TEXT_BELOW")
    '("text-right" "GNOME_ICON_LIST_TEXT_RIGHT")
  )
)

(define-flags IconLookupFlags
  (in-module "Gnome")
  (c-name "GnomeIconLookupFlags")
  (gtype-id "GNOME_TYPE_ICON_LOOKUP_FLAGS")
  (values
    '("none" "GNOME_ICON_LOOKUP_FLAGS_NONE")
    '("embedding-text" "GNOME_ICON_LOOKUP_FLAGS_EMBEDDING_TEXT")
    '("show-small-images-as-themselves" "GNOME_ICON_LOOKUP_FLAGS_SHOW_SMALL_IMAGES_AS_THEMSELVES")
    '("allow-svg-as-themselves" "GNOME_ICON_LOOKUP_FLAGS_ALLOW_SVG_AS_THEMSELVES")
  )
)

(define-flags IconLookupResultFlags
  (in-module "Gnome")
  (c-name "GnomeIconLookupResultFlags")
  (gtype-id "GNOME_TYPE_ICON_LOOKUP_RESULT_FLAGS")
  (values
    '("none" "GNOME_ICON_LOOKUP_RESULT_FLAGS_NONE")
    '("thumbnail" "GNOME_ICON_LOOKUP_RESULT_FLAGS_THUMBNAIL")
  )
)

(define-enum MDIMode
  (in-module "Gnome")
  (c-name "GnomeMDIMode")
  (gtype-id "GNOME_TYPE_MDI_MODE")
  (values
    '("notebook" "GNOME_MDI_NOTEBOOK")
    '("toplevel" "GNOME_MDI_TOPLEVEL")
    '("modal" "GNOME_MDI_MODAL")
    '("default-mode" "GNOME_MDI_DEFAULT_MODE")
  )
)

(define-enum PasswordDialogRemember
  (in-module "Gnome")
  (c-name "GnomePasswordDialogRemember")
  (gtype-id "GNOME_TYPE_PASSWORD_DIALOG_REMEMBER")
  (values
    '("nothing" "GNOME_PASSWORD_DIALOG_REMEMBER_NOTHING")
    '("session" "GNOME_PASSWORD_DIALOG_REMEMBER_SESSION")
    '("forever" "GNOME_PASSWORD_DIALOG_REMEMBER_FOREVER")
  )
)

; (define-enum ThemeFileParseError
;   (in-module "Gnome")
;   (c-name "GnomeThemeFileParseError")
;   (gtype-id "GNOME_TYPE_THEME_FILE_PARSE_ERROR")
;   (values
;     '("syntax" "GNOME_THEME_FILE_PARSE_ERROR_INVALID_SYNTAX")
;     '("escapes" "GNOME_THEME_FILE_PARSE_ERROR_INVALID_ESCAPES")
;     '("chars" "GNOME_THEME_FILE_PARSE_ERROR_INVALID_CHARS")
;   )
; )

(define-enum ThumbnailSize
  (in-module "Gnome")
  (c-name "GnomeThumbnailSize")
  (gtype-id "GNOME_TYPE_THUMBNAIL_SIZE")
  (values
    '("normal" "GNOME_THUMBNAIL_SIZE_NORMAL")
    '("large" "GNOME_THUMBNAIL_SIZE_LARGE")
  )
)

(define-enum PreferencesType
  (in-module "Gnome")
  (c-name "GnomePreferencesType")
  (gtype-id "GNOME_TYPE_PREFERENCES_TYPE")
  (values
    '("never" "GNOME_PREFERENCES_NEVER")
    '("user" "GNOME_PREFERENCES_USER")
    '("always" "GNOME_PREFERENCES_ALWAYS")
  )
)

(define-function about_get_type
  (c-name "gnome_about_get_type")
  (return-type "GType")
)

(define-function about_new
  (is-constructor-of "GnomeAbout")
  (c-name "gnome_about_new")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "name")
    '("const-gchar*" "version")
    '("const-gchar*" "copyright")
    '("const-gchar*" "comments")
    '("const-gchar**" "authors")
    '("const-gchar**" "documenters")
    '("const-gchar*" "translator_credits")
    '("GdkPixbuf*" "logo_pixbuf")
  )
)

(define-method construct
  (of-object "GnomeAbout")
  (c-name "gnome_about_construct")
  (return-type "none")
  (parameters
    '("const-gchar*" "name")
    '("const-gchar*" "version")
    '("const-gchar*" "copyright")
    '("const-gchar*" "comments")
    '("const-gchar**" "authors")
    '("const-gchar**" "documenters")
    '("const-gchar*" "translator_credits")
    '("GdkPixbuf*" "logo_pixbuf")
  )
)

(define-function app_helper_gettext
  (c-name "gnome_app_helper_gettext")
  (return-type "const-gchar*")
  (parameters
    '("const-gchar*" "string")
  )
)

(define-function accelerators_sync
  (c-name "gnome_accelerators_sync")
  (return-type "none")
)

(define-function app_fill_menu
  (c-name "gnome_app_fill_menu")
  (return-type "none")
  (parameters
    '("GtkMenuShell*" "menu_shell")
    '("GnomeUIInfo*" "uiinfo")
    '("GtkAccelGroup*" "accel_group")
    '("gboolean" "uline_accels")
    '("gint" "pos")
  )
)

(define-function app_fill_menu_with_data
  (c-name "gnome_app_fill_menu_with_data")
  (return-type "none")
  (parameters
    '("GtkMenuShell*" "menu_shell")
    '("GnomeUIInfo*" "uiinfo")
    '("GtkAccelGroup*" "accel_group")
    '("gboolean" "uline_accels")
    '("gint" "pos")
    '("gpointer" "user_data")
  )
)

(define-function app_fill_menu_custom
  (c-name "gnome_app_fill_menu_custom")
  (return-type "none")
  (parameters
    '("GtkMenuShell*" "menu_shell")
    '("GnomeUIInfo*" "uiinfo")
    '("GnomeUIBuilderData*" "uibdata")
    '("GtkAccelGroup*" "accel_group")
    '("gboolean" "uline_accels")
    '("gint" "pos")
  )
)

(define-function app_ui_configure_configurable
  (c-name "gnome_app_ui_configure_configurable")
  (return-type "none")
  (parameters
    '("GnomeUIInfo*" "uiinfo")
  )
)

(define-method create_menus
  (of-object "GnomeApp")
  (c-name "gnome_app_create_menus")
  (return-type "none")
  (parameters
    '("GnomeUIInfo*" "uiinfo")
  )
)

(define-method create_menus_interp
  (of-object "GnomeApp")
  (c-name "gnome_app_create_menus_interp")
  (return-type "none")
  (parameters
    '("GnomeUIInfo*" "uiinfo")
    '("GtkCallbackMarshal" "relay_func")
    '("gpointer" "data")
    '("GtkDestroyNotify" "destroy_func")
  )
)

(define-method create_menus_with_data
  (of-object "GnomeApp")
  (c-name "gnome_app_create_menus_with_data")
  (return-type "none")
  (parameters
    '("GnomeUIInfo*" "uiinfo")
    '("gpointer" "user_data")
  )
)

(define-method create_menus_custom
  (of-object "GnomeApp")
  (c-name "gnome_app_create_menus_custom")
  (return-type "none")
  (parameters
    '("GnomeUIInfo*" "uiinfo")
    '("GnomeUIBuilderData*" "uibdata")
  )
)

(define-function app_fill_toolbar
  (c-name "gnome_app_fill_toolbar")
  (return-type "none")
  (parameters
    '("GtkToolbar*" "toolbar")
    '("GnomeUIInfo*" "uiinfo")
    '("GtkAccelGroup*" "accel_group")
  )
)

(define-function app_fill_toolbar_with_data
  (c-name "gnome_app_fill_toolbar_with_data")
  (return-type "none")
  (parameters
    '("GtkToolbar*" "toolbar")
    '("GnomeUIInfo*" "uiinfo")
    '("GtkAccelGroup*" "accel_group")
    '("gpointer" "user_data")
  )
)

(define-function app_fill_toolbar_custom
  (c-name "gnome_app_fill_toolbar_custom")
  (return-type "none")
  (parameters
    '("GtkToolbar*" "toolbar")
    '("GnomeUIInfo*" "uiinfo")
    '("GnomeUIBuilderData*" "uibdata")
    '("GtkAccelGroup*" "accel_group")
  )
)

(define-method create_toolbar
  (of-object "GnomeApp")
  (c-name "gnome_app_create_toolbar")
  (return-type "none")
  (parameters
    '("GnomeUIInfo*" "uiinfo")
  )
)

(define-method create_toolbar_interp
  (of-object "GnomeApp")
  (c-name "gnome_app_create_toolbar_interp")
  (return-type "none")
  (parameters
    '("GnomeUIInfo*" "uiinfo")
    '("GtkCallbackMarshal" "relay_func")
    '("gpointer" "data")
    '("GtkDestroyNotify" "destroy_func")
  )
)

(define-method create_toolbar_with_data
  (of-object "GnomeApp")
  (c-name "gnome_app_create_toolbar_with_data")
  (return-type "none")
  (parameters
    '("GnomeUIInfo*" "uiinfo")
    '("gpointer" "user_data")
  )
)

(define-method create_toolbar_custom
  (of-object "GnomeApp")
  (c-name "gnome_app_create_toolbar_custom")
  (return-type "none")
  (parameters
    '("GnomeUIInfo*" "uiinfo")
    '("GnomeUIBuilderData*" "uibdata")
  )
)

(define-function app_find_menu_pos
  (c-name "gnome_app_find_menu_pos")
  (return-type "GtkWidget*")
  (parameters
    '("GtkWidget*" "parent")
    '("const-gchar*" "path")
    '("gint*" "pos")
  )
)

(define-method remove_menus
  (of-object "GnomeApp")
  (c-name "gnome_app_remove_menus")
  (return-type "none")
  (parameters
    '("const-gchar*" "path")
    '("gint" "items")
  )
)

(define-method remove_menu_range
  (of-object "GnomeApp")
  (c-name "gnome_app_remove_menu_range")
  (return-type "none")
  (parameters
    '("const-gchar*" "path")
    '("gint" "start")
    '("gint" "items")
  )
)

(define-method insert_menus_custom
  (of-object "GnomeApp")
  (c-name "gnome_app_insert_menus_custom")
  (return-type "none")
  (parameters
    '("const-gchar*" "path")
    '("GnomeUIInfo*" "menuinfo")
    '("GnomeUIBuilderData*" "uibdata")
  )
)

(define-method insert_menus
  (of-object "GnomeApp")
  (c-name "gnome_app_insert_menus")
  (return-type "none")
  (parameters
    '("const-gchar*" "path")
    '("GnomeUIInfo*" "menuinfo")
  )
)

(define-method insert_menus_with_data
  (of-object "GnomeApp")
  (c-name "gnome_app_insert_menus_with_data")
  (return-type "none")
  (parameters
    '("const-gchar*" "path")
    '("GnomeUIInfo*" "menuinfo")
    '("gpointer" "data")
  )
)

(define-method insert_menus_interp
  (of-object "GnomeApp")
  (c-name "gnome_app_insert_menus_interp")
  (return-type "none")
  (parameters
    '("const-gchar*" "path")
    '("GnomeUIInfo*" "menuinfo")
    '("GtkCallbackMarshal" "relay_func")
    '("gpointer" "data")
    '("GtkDestroyNotify" "destroy_func")
  )
)

(define-function app_install_appbar_menu_hints
  (c-name "gnome_app_install_appbar_menu_hints")
  (return-type "none")
  (parameters
    '("GnomeAppBar*" "appbar")
    '("GnomeUIInfo*" "uiinfo")
  )
)

(define-function app_install_statusbar_menu_hints
  (c-name "gnome_app_install_statusbar_menu_hints")
  (return-type "none")
  (parameters
    '("GtkStatusbar*" "bar")
    '("GnomeUIInfo*" "uiinfo")
  )
)

(define-method install_menu_hints
  (of-object "GnomeApp")
  (c-name "gnome_app_install_menu_hints")
  (return-type "none")
  (parameters
    '("GnomeUIInfo*" "uinfo")
  )
)

(define-function app_setup_toolbar
  (c-name "gnome_app_setup_toolbar")
  (return-type "none")
  (parameters
    '("GtkToolbar*" "toolbar")
    '("BonoboDockItem*" "dock_item")
  )
)

(define-method message
  (of-object "GnomeApp")
  (c-name "gnome_app_message")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "message")
  )
)

(define-method flash
  (of-object "GnomeApp")
  (c-name "gnome_app_flash")
  (return-type "none")
  (parameters
    '("const-gchar*" "flash")
  )
)

(define-method error
  (of-object "GnomeApp")
  (c-name "gnome_app_error")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "error")
  )
)

(define-method warning
  (of-object "GnomeApp")
  (c-name "gnome_app_warning")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "warning")
  )
)

(define-method question
  (of-object "GnomeApp")
  (c-name "gnome_app_question")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "question")
    '("GnomeReplyCallback" "callback")
    '("gpointer" "data")
  )
)

(define-method question_modal
  (of-object "GnomeApp")
  (c-name "gnome_app_question_modal")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "question")
    '("GnomeReplyCallback" "callback")
    '("gpointer" "data")
  )
)

(define-method ok_cancel
  (of-object "GnomeApp")
  (c-name "gnome_app_ok_cancel")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "message")
    '("GnomeReplyCallback" "callback")
    '("gpointer" "data")
  )
)

(define-method ok_cancel_modal
  (of-object "GnomeApp")
  (c-name "gnome_app_ok_cancel_modal")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "message")
    '("GnomeReplyCallback" "callback")
    '("gpointer" "data")
  )
)

(define-method request_string
  (of-object "GnomeApp")
  (c-name "gnome_app_request_string")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "prompt")
    '("GnomeStringCallback" "callback")
    '("gpointer" "data")
  )
)

(define-method request_password
  (of-object "GnomeApp")
  (c-name "gnome_app_request_password")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "prompt")
    '("GnomeStringCallback" "callback")
    '("gpointer" "data")
  )
)

(define-method progress_timeout
  (of-object "GnomeApp")
  (c-name "gnome_app_progress_timeout")
  (return-type "GnomeAppProgressKey")
  (parameters
    '("const-gchar*" "description")
    '("guint32" "interval")
    '("GnomeAppProgressFunc" "percentage_cb")
    '("GnomeAppProgressCancelFunc" "cancel_cb")
    '("gpointer" "data")
  )
)

(define-method progress_manual
  (of-object "GnomeApp")
  (c-name "gnome_app_progress_manual")
  (return-type "GnomeAppProgressKey")
  (parameters
    '("const-gchar*" "description")
    '("GnomeAppProgressCancelFunc" "cancel_cb")
    '("gpointer" "data")
  )
)

(define-function app_set_progress
  (c-name "gnome_app_set_progress")
  (return-type "none")
  (parameters
    '("GnomeAppProgressKey" "key")
    '("gdouble" "percent")
  )
)

(define-function app_progress_done
  (c-name "gnome_app_progress_done")
  (return-type "none")
  (parameters
    '("GnomeAppProgressKey" "key")
  )
)

(define-function app_get_type
  (c-name "gnome_app_get_type")
  (return-type "GType")
)

(define-function app_new
  (is-constructor-of "GnomeApp")
  (c-name "gnome_app_new")
  (return-type "GtkWidget*")
  (properties
    '("name")
    '("title")
  )
)

(define-method construct
  (of-object "GnomeApp")
  (c-name "gnome_app_construct")
  (return-type "none")
  (parameters
    '("const-gchar*" "appname")
    '("const-gchar*" "title")
  )
)

(define-method set_menus
  (of-object "GnomeApp")
  (c-name "gnome_app_set_menus")
  (return-type "none")
  (parameters
    '("GtkMenuBar*" "menubar")
  )
)

(define-method set_toolbar
  (of-object "GnomeApp")
  (c-name "gnome_app_set_toolbar")
  (return-type "none")
  (parameters
    '("GtkToolbar*" "toolbar")
  )
)

(define-method set_statusbar
  (of-object "GnomeApp")
  (c-name "gnome_app_set_statusbar")
  (return-type "none")
  (parameters
    '("GtkWidget*" "statusbar")
  )
)

(define-method set_statusbar_custom
  (of-object "GnomeApp")
  (c-name "gnome_app_set_statusbar_custom")
  (return-type "none")
  (parameters
    '("GtkWidget*" "container")
    '("GtkWidget*" "statusbar")
  )
)

(define-method set_contents
  (of-object "GnomeApp")
  (c-name "gnome_app_set_contents")
  (return-type "none")
  (parameters
    '("GtkWidget*" "contents")
  )
)

(define-method add_toolbar
  (of-object "GnomeApp")
  (c-name "gnome_app_add_toolbar")
  (return-type "none")
  (parameters
    '("GtkToolbar*" "toolbar")
    '("const-gchar*" "name")
    '("BonoboDockItemBehavior" "behavior")
    '("BonoboDockPlacement" "placement")
    '("gint" "band_num")
    '("gint" "band_position")
    '("gint" "offset")
  )
)

(define-method add_docked
  (of-object "GnomeApp")
  (c-name "gnome_app_add_docked")
  (return-type "GtkWidget*")
  (parameters
    '("GtkWidget*" "widget")
    '("const-gchar*" "name")
    '("BonoboDockItemBehavior" "behavior")
    '("BonoboDockPlacement" "placement")
    '("gint" "band_num")
    '("gint" "band_position")
    '("gint" "offset")
  )
)

(define-method add_dock_item
  (of-object "GnomeApp")
  (c-name "gnome_app_add_dock_item")
  (return-type "none")
  (parameters
    '("BonoboDockItem*" "item")
    '("BonoboDockPlacement" "placement")
    '("gint" "band_num")
    '("gint" "band_position")
    '("gint" "offset")
  )
)

(define-method enable_layout_config
  (of-object "GnomeApp")
  (c-name "gnome_app_enable_layout_config")
  (return-type "none")
  (parameters
    '("gboolean" "enable")
  )
)

(define-method get_dock
  (of-object "GnomeApp")
  (c-name "gnome_app_get_dock")
  (return-type "BonoboDock*")
)

(define-method get_dock_item_by_name
  (of-object "GnomeApp")
  (c-name "gnome_app_get_dock_item_by_name")
  (return-type "BonoboDockItem*")
  (parameters
    '("const-gchar*" "name")
  )
)

(define-function appbar_get_type
  (c-name "gnome_appbar_get_type")
  (return-type "GType")
)

(define-function appbar_new
  (is-constructor-of "GnomeAppBar")
  (c-name "gnome_appbar_new")
  (return-type "GtkWidget*")
  (properties
    '("has_progress")
    '("has_status")
    '("interactivity")
  )
)

(define-method set_status
  (of-object "GnomeAppBar")
  (c-name "gnome_appbar_set_status")
  (return-type "none")
  (parameters
    '("const-gchar*" "status")
  )
)

(define-method get_status
  (of-object "GnomeAppBar")
  (c-name "gnome_appbar_get_status")
  (return-type "GtkWidget*")
)

(define-method set_default
  (of-object "GnomeAppBar")
  (c-name "gnome_appbar_set_default")
  (return-type "none")
  (parameters
    '("const-gchar*" "default_status")
  )
)

(define-method push
  (of-object "GnomeAppBar")
  (c-name "gnome_appbar_push")
  (return-type "none")
  (parameters
    '("const-gchar*" "status")
  )
)

(define-method pop
  (of-object "GnomeAppBar")
  (c-name "gnome_appbar_pop")
  (return-type "none")
)

(define-method clear_stack
  (of-object "GnomeAppBar")
  (c-name "gnome_appbar_clear_stack")
  (return-type "none")
)

(define-method set_progress_percentage
  (of-object "GnomeAppBar")
  (c-name "gnome_appbar_set_progress_percentage")
  (return-type "none")
  (parameters
    '("gfloat" "percentage")
  )
)

(define-method get_progress
  (of-object "GnomeAppBar")
  (c-name "gnome_appbar_get_progress")
  (return-type "GtkProgressBar*")
)

(define-method refresh
  (of-object "GnomeAppBar")
  (c-name "gnome_appbar_refresh")
  (return-type "none")
)

(define-method set_prompt
  (of-object "GnomeAppBar")
  (c-name "gnome_appbar_set_prompt")
  (return-type "none")
  (parameters
    '("const-gchar*" "prompt")
    '("gboolean" "modal")
  )
)

(define-method clear_prompt
  (of-object "GnomeAppBar")
  (c-name "gnome_appbar_clear_prompt")
  (return-type "none")
)

(define-method get_response
  (of-object "GnomeAppBar")
  (c-name "gnome_appbar_get_response")
  (return-type "gchar*")
)

(define-function authentication_manager_init
  (c-name "gnome_authentication_manager_init")
  (return-type "none")
)

(define-function authentication_manager_dialog_is_visible
  (c-name "gnome_authentication_manager_dialog_is_visible")
  (return-type "gboolean")
)

(define-function client_module_info_get
  (c-name "gnome_client_module_info_get")
  (return-type "const-GnomeModuleInfo*")
)

(define-function client_get_type
  (c-name "gnome_client_get_type")
  (return-type "GType")
)

(define-function master_client
  (c-name "gnome_master_client")
  (return-type "GnomeClient*")
)

(define-method get_config_prefix
  (of-object "GnomeClient")
  (c-name "gnome_client_get_config_prefix")
  (return-type "const-gchar*")
)

(define-method get_global_config_prefix
  (of-object "GnomeClient")
  (c-name "gnome_client_get_global_config_prefix")
  (return-type "const-gchar*")
)

(define-method set_global_config_prefix
  (of-object "GnomeClient")
  (c-name "gnome_client_set_global_config_prefix")
  (return-type "none")
  (parameters
    '("const-gchar*" "prefix")
  )
)

(define-method get_flags
  (of-object "GnomeClient")
  (c-name "gnome_client_get_flags")
  (return-type "GnomeClientFlags")
)

(define-method set_restart_style
  (of-object "GnomeClient")
  (c-name "gnome_client_set_restart_style")
  (return-type "none")
  (parameters
    '("GnomeRestartStyle" "style")
  )
)

(define-method set_priority
  (of-object "GnomeClient")
  (c-name "gnome_client_set_priority")
  (return-type "none")
  (parameters
    '("guint" "priority")
  )
)

(define-method set_restart_command
  (of-object "GnomeClient")
  (c-name "gnome_client_set_restart_command")
  (return-type "none")
  (parameters
    '("gint" "argc")
    '("gchar*[]" "argv")
  )
)

(define-method add_static_arg
  (of-object "GnomeClient")
  (c-name "gnome_client_add_static_arg")
  (return-type "none")
)

(define-method set_discard_command
  (of-object "GnomeClient")
  (c-name "gnome_client_set_discard_command")
  (return-type "none")
  (parameters
    '("gint" "argc")
    '("gchar*[]" "argv")
  )
)

(define-method set_resign_command
  (of-object "GnomeClient")
  (c-name "gnome_client_set_resign_command")
  (return-type "none")
  (parameters
    '("gint" "argc")
    '("gchar*[]" "argv")
  )
)

(define-method set_shutdown_command
  (of-object "GnomeClient")
  (c-name "gnome_client_set_shutdown_command")
  (return-type "none")
  (parameters
    '("gint" "argc")
    '("gchar*[]" "argv")
  )
)

(define-method set_current_directory
  (of-object "GnomeClient")
  (c-name "gnome_client_set_current_directory")
  (return-type "none")
  (parameters
    '("const-gchar*" "dir")
  )
)

(define-method set_environment
  (of-object "GnomeClient")
  (c-name "gnome_client_set_environment")
  (return-type "none")
  (parameters
    '("const-gchar*" "name")
    '("const-gchar*" "value")
  )
)

(define-method set_clone_command
  (of-object "GnomeClient")
  (c-name "gnome_client_set_clone_command")
  (return-type "none")
  (parameters
    '("gint" "argc")
    '("gchar*[]" "argv")
  )
)

(define-method set_process_id
  (of-object "GnomeClient")
  (c-name "gnome_client_set_process_id")
  (return-type "none")
  (parameters
    '("pid_t" "pid")
  )
)

(define-method set_program
  (of-object "GnomeClient")
  (c-name "gnome_client_set_program")
  (return-type "none")
  (parameters
    '("const-gchar*" "program")
  )
)

(define-method set_user_id
  (of-object "GnomeClient")
  (c-name "gnome_client_set_user_id")
  (return-type "none")
  (parameters
    '("const-gchar*" "user_id")
  )
)

(define-method save_any_dialog
  (of-object "GnomeClient")
  (c-name "gnome_client_save_any_dialog")
  (return-type "none")
  (parameters
    '("GtkDialog*" "dialog")
  )
)

(define-method save_error_dialog
  (of-object "GnomeClient")
  (c-name "gnome_client_save_error_dialog")
  (return-type "none")
  (parameters
    '("GtkDialog*" "dialog")
  )
)

(define-method request_phase_2
  (of-object "GnomeClient")
  (c-name "gnome_client_request_phase_2")
  (return-type "none")
)

(define-method request_save
  (of-object "GnomeClient")
  (c-name "gnome_client_request_save")
  (return-type "none")
  (parameters
    '("GnomeSaveStyle" "save_style")
    '("gboolean" "shutdown")
    '("GnomeInteractStyle" "interact_style")
    '("gboolean" "fast")
    '("gboolean" "global")
  )
)

(define-method flush
  (of-object "GnomeClient")
  (c-name "gnome_client_flush")
  (return-type "none")
)

(define-function client_disable_master_connection
  (c-name "gnome_client_disable_master_connection")
  (return-type "none")
)

(define-function client_new
  (is-constructor-of "GnomeClient")
  (c-name "gnome_client_new")
  (return-type "GnomeClient*")
)

(define-function client_new_without_connection
  (is-constructor-of "GnomeClient")
  (c-name "gnome_client_new_without_connection")
  (return-type "GnomeClient*")
)

(define-method connect_to_session_manager
  (of-object "GnomeClient")
  (c-name "gnome_client_connect")
  (return-type "none")
)

(define-method disconnect
  (of-object "GnomeClient")
  (c-name "gnome_client_disconnect")
  (return-type "none")
)

(define-method set_id
  (of-object "GnomeClient")
  (c-name "gnome_client_set_id")
  (return-type "none")
  (parameters
    '("const-gchar*" "client_id")
  )
)

(define-method get_id
  (of-object "GnomeClient")
  (c-name "gnome_client_get_id")
  (return-type "const-gchar*")
)

(define-method get_previous_id
  (of-object "GnomeClient")
  (c-name "gnome_client_get_previous_id")
  (return-type "const-gchar*")
)

(define-method get_desktop_id
  (of-object "GnomeClient")
  (c-name "gnome_client_get_desktop_id")
  (return-type "const-gchar*")
)

(define-method request_interaction
  (of-object "GnomeClient")
  (c-name "gnome_client_request_interaction")
  (return-type "none")
  (parameters
    '("GnomeDialogType" "dialog")
    '("GnomeInteractFunction" "func")
    '("gpointer" "client_data")
  )
)

(define-method request_interaction_interp
  (of-object "GnomeClient")
  (c-name "gnome_client_request_interaction_interp")
  (return-type "none")
  (parameters
    '("GnomeDialogType" "dialog")
    '("GtkCallbackMarshal" "func")
    '("gpointer" "data")
    '("GtkDestroyNotify" "destroy")
  )
)

(define-function interaction_key_return
  (c-name "gnome_interaction_key_return")
  (return-type "none")
  (parameters
    '("gint" "key")
    '("gboolean" "cancel_shutdown")
  )
)

(define-function color_picker_get_type
  (c-name "gnome_color_picker_get_type")
  (return-type "GType")
)

(define-function color_picker_new
  (is-constructor-of "GnomeColorPicker")
  (c-name "gnome_color_picker_new")
  (return-type "GtkWidget*")
)

(define-method set_d
  (of-object "GnomeColorPicker")
  (c-name "gnome_color_picker_set_d")
  (return-type "none")
  (parameters
    '("gdouble" "r")
    '("gdouble" "g")
    '("gdouble" "b")
    '("gdouble" "a")
  )
)

(define-method get_d
  (of-object "GnomeColorPicker")
  (c-name "gnome_color_picker_get_d")
  (return-type "none")
  (parameters
    '("gdouble*" "r")
    '("gdouble*" "g")
    '("gdouble*" "b")
    '("gdouble*" "a")
  )
)

(define-method set_i8
  (of-object "GnomeColorPicker")
  (c-name "gnome_color_picker_set_i8")
  (return-type "none")
  (parameters
    '("guint8" "r")
    '("guint8" "g")
    '("guint8" "b")
    '("guint8" "a")
  )
)

(define-method get_i8
  (of-object "GnomeColorPicker")
  (c-name "gnome_color_picker_get_i8")
  (return-type "none")
  (parameters
    '("guint8*" "r")
    '("guint8*" "g")
    '("guint8*" "b")
    '("guint8*" "a")
  )
)

(define-method set_i16
  (of-object "GnomeColorPicker")
  (c-name "gnome_color_picker_set_i16")
  (return-type "none")
  (parameters
    '("gushort" "r")
    '("gushort" "g")
    '("gushort" "b")
    '("gushort" "a")
  )
)

(define-method get_i16
  (of-object "GnomeColorPicker")
  (c-name "gnome_color_picker_get_i16")
  (return-type "none")
  (parameters
    '("gushort*" "r")
    '("gushort*" "g")
    '("gushort*" "b")
    '("gushort*" "a")
  )
)

(define-method set_dither
  (of-object "GnomeColorPicker")
  (c-name "gnome_color_picker_set_dither")
  (return-type "none")
  (parameters
    '("gboolean" "dither")
  )
)

(define-method get_dither
  (of-object "GnomeColorPicker")
  (c-name "gnome_color_picker_get_dither")
  (return-type "gboolean")
)

(define-method set_use_alpha
  (of-object "GnomeColorPicker")
  (c-name "gnome_color_picker_set_use_alpha")
  (return-type "none")
  (parameters
    '("gboolean" "use_alpha")
  )
)

(define-method get_use_alpha
  (of-object "GnomeColorPicker")
  (c-name "gnome_color_picker_get_use_alpha")
  (return-type "gboolean")
)

(define-method set_title
  (of-object "GnomeColorPicker")
  (c-name "gnome_color_picker_set_title")
  (return-type "none")
  (parameters
    '("const-gchar*" "title")
  )
)

(define-method get_title
  (of-object "GnomeColorPicker")
  (c-name "gnome_color_picker_get_title")
  (return-type "const-char*")
)

(define-function date_edit_get_type
  (c-name "gnome_date_edit_get_type")
  (return-type "GType")
)

(define-function date_edit_new
  (is-constructor-of "GnomeDateEdit")
  (c-name "gnome_date_edit_new")
  (return-type "GtkWidget*")
  (parameters
    '("time_t" "the_time")
    '("gboolean" "show_time")
    '("gboolean" "use_24_format")
  )
)

(define-function date_edit_new_flags
  (is-constructor-of "GnomeDateEdit")
  (c-name "gnome_date_edit_new_flags")
  (return-type "GtkWidget*")
  (parameters
    '("time_t" "the_time")
    '("GnomeDateEditFlags" "flags")
  )
)

(define-method construct
  (of-object "GnomeDateEdit")
  (c-name "gnome_date_edit_construct")
  (return-type "none")
  (parameters
    '("time_t" "the_time")
    '("GnomeDateEditFlags" "flags")
  )
)

(define-method set_time
  (of-object "GnomeDateEdit")
  (c-name "gnome_date_edit_set_time")
  (return-type "none")
  (parameters
    '("time_t" "the_time")
  )
)

(define-method get_time
  (of-object "GnomeDateEdit")
  (c-name "gnome_date_edit_get_time")
  (return-type "time_t")
)

(define-method set_popup_range
  (of-object "GnomeDateEdit")
  (c-name "gnome_date_edit_set_popup_range")
  (return-type "none")
  (parameters
    '("int" "low_hour")
    '("int" "up_hour")
  )
)

(define-method set_flags
  (of-object "GnomeDateEdit")
  (c-name "gnome_date_edit_set_flags")
  (return-type "none")
  (parameters
    '("GnomeDateEditFlags" "flags")
  )
)

(define-method get_flags
  (of-object "GnomeDateEdit")
  (c-name "gnome_date_edit_get_flags")
  (return-type "int")
)

(define-method get_initial_time
  (of-object "GnomeDateEdit")
  (c-name "gnome_date_edit_get_initial_time")
  (return-type "time_t")
)

(define-method get_date
  (of-object "GnomeDateEdit")
  (c-name "gnome_date_edit_get_date")
  (return-type "time_t")
)

(define-function ok_dialog
  (c-name "gnome_ok_dialog")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "message")
  )
)

(define-function ok_dialog_parented
  (c-name "gnome_ok_dialog_parented")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "message")
    '("GtkWindow*" "parent")
  )
)

(define-function error_dialog
  (c-name "gnome_error_dialog")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "error")
  )
)

(define-function error_dialog_parented
  (c-name "gnome_error_dialog_parented")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "error")
    '("GtkWindow*" "parent")
  )
)

(define-function warning_dialog
  (c-name "gnome_warning_dialog")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "warning")
  )
)

(define-function warning_dialog_parented
  (c-name "gnome_warning_dialog_parented")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "warning")
    '("GtkWindow*" "parent")
  )
)

(define-function question_dialog
  (c-name "gnome_question_dialog")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "question")
    '("GnomeReplyCallback" "callback")
    '("gpointer" "data")
  )
)

(define-function question_dialog_parented
  (c-name "gnome_question_dialog_parented")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "question")
    '("GnomeReplyCallback" "callback")
    '("gpointer" "data")
    '("GtkWindow*" "parent")
  )
)

(define-function question_dialog_modal
  (c-name "gnome_question_dialog_modal")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "question")
    '("GnomeReplyCallback" "callback")
    '("gpointer" "data")
  )
)

(define-function question_dialog_modal_parented
  (c-name "gnome_question_dialog_modal_parented")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "question")
    '("GnomeReplyCallback" "callback")
    '("gpointer" "data")
    '("GtkWindow*" "parent")
  )
)

(define-function ok_cancel_dialog
  (c-name "gnome_ok_cancel_dialog")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "message")
    '("GnomeReplyCallback" "callback")
    '("gpointer" "data")
  )
)

(define-function ok_cancel_dialog_parented
  (c-name "gnome_ok_cancel_dialog_parented")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "message")
    '("GnomeReplyCallback" "callback")
    '("gpointer" "data")
    '("GtkWindow*" "parent")
  )
)

(define-function ok_cancel_dialog_modal
  (c-name "gnome_ok_cancel_dialog_modal")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "message")
    '("GnomeReplyCallback" "callback")
    '("gpointer" "data")
  )
)

(define-function ok_cancel_dialog_modal_parented
  (c-name "gnome_ok_cancel_dialog_modal_parented")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "message")
    '("GnomeReplyCallback" "callback")
    '("gpointer" "data")
    '("GtkWindow*" "parent")
  )
)

(define-function request_string_dialog
  (c-name "gnome_request_string_dialog")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "prompt")
    '("GnomeStringCallback" "callback")
    '("gpointer" "data")
  )
)

(define-function request_string_dialog_parented
  (c-name "gnome_request_string_dialog_parented")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "prompt")
    '("GnomeStringCallback" "callback")
    '("gpointer" "data")
    '("GtkWindow*" "parent")
  )
)

(define-function request_password_dialog
  (c-name "gnome_request_password_dialog")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "prompt")
    '("GnomeStringCallback" "callback")
    '("gpointer" "data")
  )
)

(define-function request_password_dialog_parented
  (c-name "gnome_request_password_dialog_parented")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "prompt")
    '("GnomeStringCallback" "callback")
    '("gpointer" "data")
    '("GtkWindow*" "parent")
  )
)

(define-function request_dialog
  (c-name "gnome_request_dialog")
  (return-type "GtkWidget*")
  (parameters
    '("gboolean" "password")
    '("const-gchar*" "prompt")
    '("const-gchar*" "default_text")
    '("const-guint16" "max_length")
    '("GnomeStringCallback" "callback")
    '("gpointer" "data")
    '("GtkWindow*" "parent")
  )
)

(define-function dialog_get_type
  (c-name "gnome_dialog_get_type")
  (return-type "GType")
)

(define-function dialog_new
  (is-constructor-of "GnomeDialog")
  (c-name "gnome_dialog_new")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "title")
  )
  (varargs #t)
)

(define-function dialog_newv
  (is-constructor-of "GnomeDialog")
  (c-name "gnome_dialog_newv")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "title")
    '("const-gchar**" "buttons")
  )
)

(define-method set_parent
  (of-object "GnomeDialog")
  (c-name "gnome_dialog_set_parent")
  (return-type "none")
  (parameters
    '("GtkWindow*" "parent")
  )
)

(define-method button_connect
  (of-object "GnomeDialog")
  (c-name "gnome_dialog_button_connect")
  (return-type "none")
  (parameters
    '("gint" "button")
    '("GtkSignalFunc" "callback")
    '("gpointer" "data")
  )
)

(define-method button_connect_object
  (of-object "GnomeDialog")
  (c-name "gnome_dialog_button_connect_object")
  (return-type "none")
  (parameters
    '("gint" "button")
    '("GtkSignalFunc" "callback")
    '("GtkObject*" "obj")
  )
)

(define-method run
  (of-object "GnomeDialog")
  (c-name "gnome_dialog_run")
  (return-type "gint")
)

(define-method run_and_close
  (of-object "GnomeDialog")
  (c-name "gnome_dialog_run_and_close")
  (return-type "gint")
)

(define-method set_default
  (of-object "GnomeDialog")
  (c-name "gnome_dialog_set_default")
  (return-type "none")
  (parameters
    '("gint" "button")
  )
)

(define-method grab_focus
  (of-object "GnomeDialog")
  (c-name "gnome_dialog_grab_focus")
  (return-type "none")
  (parameters
    '("gint" "button")
  )
)

(define-method set_sensitive
  (of-object "GnomeDialog")
  (c-name "gnome_dialog_set_sensitive")
  (return-type "none")
  (parameters
    '("gint" "button")
    '("gboolean" "setting")
  )
)

(define-method set_accelerator
  (of-object "GnomeDialog")
  (c-name "gnome_dialog_set_accelerator")
  (return-type "none")
  (parameters
    '("gint" "button")
    '("const-guchar" "accelerator_key")
    '("guint8" "accelerator_mods")
  )
)

(define-method close
  (of-object "GnomeDialog")
  (c-name "gnome_dialog_close")
  (return-type "none")
)

(define-method close_hides
  (of-object "GnomeDialog")
  (c-name "gnome_dialog_close_hides")
  (return-type "none")
  (parameters
    '("gboolean" "just_hide")
  )
)

(define-method set_close
  (of-object "GnomeDialog")
  (c-name "gnome_dialog_set_close")
  (return-type "none")
  (parameters
    '("gboolean" "click_closes")
  )
)

(define-method editable_enters
  (of-object "GnomeDialog")
  (c-name "gnome_dialog_editable_enters")
  (return-type "none")
  (parameters
    '("GtkEditable*" "editable")
  )
)

(define-method append_buttons
  (of-object "GnomeDialog")
  (c-name "gnome_dialog_append_buttons")
  (return-type "none")
  (parameters
    '("const-gchar*" "first")
  )
)

(define-method append_button
  (of-object "GnomeDialog")
  (c-name "gnome_dialog_append_button")
  (return-type "none")
  (parameters
    '("const-gchar*" "name")
  )
)

(define-method append_buttonsv
  (of-object "GnomeDialog")
  (c-name "gnome_dialog_append_buttonsv")
  (return-type "none")
  (parameters
    '("const-gchar**" "buttons")
  )
)

(define-method append_button_with_pixmap
  (of-object "GnomeDialog")
  (c-name "gnome_dialog_append_button_with_pixmap")
  (return-type "none")
  (parameters
    '("const-gchar*" "name")
    '("const-gchar*" "pixmap")
  )
)

(define-method append_buttons_with_pixmaps
  (of-object "GnomeDialog")
  (c-name "gnome_dialog_append_buttons_with_pixmaps")
  (return-type "none")
  (parameters
    '("const-gchar**" "names")
    '("const-gchar**" "pixmaps")
  )
)

(define-method construct
  (of-object "GnomeDialog")
  (c-name "gnome_dialog_construct")
  (return-type "none")
  (parameters
    '("const-gchar*" "title")
    '("va_list" "ap")
  )
)

(define-method constructv
  (of-object "GnomeDialog")
  (c-name "gnome_dialog_constructv")
  (return-type "none")
  (parameters
    '("const-gchar*" "title")
    '("const-gchar**" "buttons")
  )
)

(define-function druid_page_edge_get_type
  (c-name "gnome_druid_page_edge_get_type")
  (return-type "GType")
)

(define-function druid_page_edge_new
  (is-constructor-of "GnomeDruidPageEdge")
  (c-name "gnome_druid_page_edge_new")
  (return-type "GtkWidget*")
  (parameters
    '("GnomeEdgePosition" "position")
  )
)

(define-function druid_page_edge_new_aa
  (is-constructor-of "GnomeDruidPageEdge")
  (c-name "gnome_druid_page_edge_new_aa")
  (return-type "GtkWidget*")
  (parameters
    '("GnomeEdgePosition" "position")
  )
)

(define-function druid_page_edge_new_with_vals
  (is-constructor-of "GnomeDruidPageEdge")
  (c-name "gnome_druid_page_edge_new_with_vals")
  (return-type "GtkWidget*")
  (parameters
    '("GnomeEdgePosition" "position")
    '("gboolean" "antialiased")
    '("const-gchar*" "title")
    '("const-gchar*" "text")
    '("GdkPixbuf*" "logo")
    '("GdkPixbuf*" "watermark")
    '("GdkPixbuf*" "top_watermark")
  )
)

(define-method construct
  (of-object "GnomeDruidPageEdge")
  (c-name "gnome_druid_page_edge_construct")
  (return-type "none")
  (parameters
    '("GnomeEdgePosition" "position")
    '("gboolean" "antialiaed")
    '("const-gchar*" "title")
    '("const-gchar*" "text")
    '("GdkPixbuf*" "logo")
    '("GdkPixbuf*" "watermark")
    '("GdkPixbuf*" "top_watermark")
  )
)

(define-method set_bg_color
  (of-object "GnomeDruidPageEdge")
  (c-name "gnome_druid_page_edge_set_bg_color")
  (return-type "none")
  (parameters
    '("GdkColor*" "color")
  )
)

(define-method set_textbox_color
  (of-object "GnomeDruidPageEdge")
  (c-name "gnome_druid_page_edge_set_textbox_color")
  (return-type "none")
  (parameters
    '("GdkColor*" "color")
  )
)

(define-method set_logo_bg_color
  (of-object "GnomeDruidPageEdge")
  (c-name "gnome_druid_page_edge_set_logo_bg_color")
  (return-type "none")
  (parameters
    '("GdkColor*" "color")
  )
)

(define-method set_title_color
  (of-object "GnomeDruidPageEdge")
  (c-name "gnome_druid_page_edge_set_title_color")
  (return-type "none")
  (parameters
    '("GdkColor*" "color")
  )
)

(define-method set_text_color
  (of-object "GnomeDruidPageEdge")
  (c-name "gnome_druid_page_edge_set_text_color")
  (return-type "none")
  (parameters
    '("GdkColor*" "color")
  )
)

(define-method set_text
  (of-object "GnomeDruidPageEdge")
  (c-name "gnome_druid_page_edge_set_text")
  (return-type "none")
  (parameters
    '("const-gchar*" "text")
  )
)

(define-method set_title
  (of-object "GnomeDruidPageEdge")
  (c-name "gnome_druid_page_edge_set_title")
  (return-type "none")
  (parameters
    '("const-gchar*" "title")
  )
)

(define-method set_logo
  (of-object "GnomeDruidPageEdge")
  (c-name "gnome_druid_page_edge_set_logo")
  (return-type "none")
  (parameters
    '("GdkPixbuf*" "logo_image")
  )
)

(define-method set_watermark
  (of-object "GnomeDruidPageEdge")
  (c-name "gnome_druid_page_edge_set_watermark")
  (return-type "none")
  (parameters
    '("GdkPixbuf*" "watermark")
  )
)

(define-method set_top_watermark
  (of-object "GnomeDruidPageEdge")
  (c-name "gnome_druid_page_edge_set_top_watermark")
  (return-type "none")
  (parameters
    '("GdkPixbuf*" "top_watermark")
  )
)

(define-function druid_page_standard_get_type
  (c-name "gnome_druid_page_standard_get_type")
  (return-type "GType")
)

(define-function druid_page_standard_new
  (is-constructor-of "GnomeDruidPageStandard")
  (c-name "gnome_druid_page_standard_new")
  (return-type "GtkWidget*")
)

(define-function druid_page_standard_new_with_vals
  (is-constructor-of "GnomeDruidPageStandard")
  (c-name "gnome_druid_page_standard_new_with_vals")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "title")
    '("GdkPixbuf*" "logo")
    '("GdkPixbuf*" "top_watermark")
  )
)

(define-method set_title
  (of-object "GnomeDruidPageStandard")
  (c-name "gnome_druid_page_standard_set_title")
  (return-type "none")
  (parameters
    '("const-gchar*" "title")
  )
)

(define-method set_logo
  (of-object "GnomeDruidPageStandard")
  (c-name "gnome_druid_page_standard_set_logo")
  (return-type "none")
  (parameters
    '("GdkPixbuf*" "logo_image")
  )
)

(define-method set_top_watermark
  (of-object "GnomeDruidPageStandard")
  (c-name "gnome_druid_page_standard_set_top_watermark")
  (return-type "none")
  (parameters
    '("GdkPixbuf*" "top_watermark_image")
  )
)

(define-method set_title_foreground
  (of-object "GnomeDruidPageStandard")
  (c-name "gnome_druid_page_standard_set_title_foreground")
  (return-type "none")
  (parameters
    '("GdkColor*" "color")
  )
)

(define-method set_background
  (of-object "GnomeDruidPageStandard")
  (c-name "gnome_druid_page_standard_set_background")
  (return-type "none")
  (parameters
    '("GdkColor*" "color")
  )
)

(define-method set_logo_background
  (of-object "GnomeDruidPageStandard")
  (c-name "gnome_druid_page_standard_set_logo_background")
  (return-type "none")
  (parameters
    '("GdkColor*" "color")
  )
)

(define-method set_contents_background
  (of-object "GnomeDruidPageStandard")
  (c-name "gnome_druid_page_standard_set_contents_background")
  (return-type "none")
  (parameters
    '("GdkColor*" "color")
  )
)

(define-method append_item
  (of-object "GnomeDruidPageStandard")
  (c-name "gnome_druid_page_standard_append_item")
  (return-type "none")
  (parameters
    '("const-gchar*" "question_mnemonic")
    '("GtkWidget*" "item")
    '("const-gchar*" "additional_info_markup")
  )
)

(define-function druid_page_get_type
  (c-name "gnome_druid_page_get_type")
  (return-type "GType")
)

(define-function druid_page_new
  (is-constructor-of "GnomeDruidPage")
  (c-name "gnome_druid_page_new")
  (return-type "GtkWidget*")
)

(define-method next
  (of-object "GnomeDruidPage")
  (c-name "gnome_druid_page_next")
  (return-type "gboolean")
)

(define-method prepare
  (of-object "GnomeDruidPage")
  (c-name "gnome_druid_page_prepare")
  (return-type "none")
)

(define-method back
  (of-object "GnomeDruidPage")
  (c-name "gnome_druid_page_back")
  (return-type "gboolean")
)

(define-method cancel
  (of-object "GnomeDruidPage")
  (c-name "gnome_druid_page_cancel")
  (return-type "gboolean")
)

(define-method finish
  (of-object "GnomeDruidPage")
  (c-name "gnome_druid_page_finish")
  (return-type "none")
)

(define-function druid_get_type
  (c-name "gnome_druid_get_type")
  (return-type "GType")
)

(define-function druid_new
  (is-constructor-of "GnomeDruid")
  (c-name "gnome_druid_new")
  (return-type "GtkWidget*")
)

(define-method set_buttons_sensitive
  (of-object "GnomeDruid")
  (c-name "gnome_druid_set_buttons_sensitive")
  (return-type "none")
  (parameters
    '("gboolean" "back_sensitive")
    '("gboolean" "next_sensitive")
    '("gboolean" "cancel_sensitive")
    '("gboolean" "help_sensitive")
  )
)

(define-method set_show_finish
  (of-object "GnomeDruid")
  (c-name "gnome_druid_set_show_finish")
  (return-type "none")
  (parameters
    '("gboolean" "show_finish")
  )
)

(define-method set_show_help
  (of-object "GnomeDruid")
  (c-name "gnome_druid_set_show_help")
  (return-type "none")
  (parameters
    '("gboolean" "show_help")
  )
)

(define-method prepend_page
  (of-object "GnomeDruid")
  (c-name "gnome_druid_prepend_page")
  (return-type "none")
  (parameters
    '("GnomeDruidPage*" "page")
  )
)

(define-method insert_page
  (of-object "GnomeDruid")
  (c-name "gnome_druid_insert_page")
  (return-type "none")
  (parameters
    '("GnomeDruidPage*" "back_page")
    '("GnomeDruidPage*" "page")
  )
)

(define-method append_page
  (of-object "GnomeDruid")
  (c-name "gnome_druid_append_page")
  (return-type "none")
  (parameters
    '("GnomeDruidPage*" "page")
  )
)

(define-method set_page
  (of-object "GnomeDruid")
  (c-name "gnome_druid_set_page")
  (return-type "none")
  (parameters
    '("GnomeDruidPage*" "page")
  )
)

(define-function druid_new_with_window
  (is-constructor-of "GnomeDruid")
  (c-name "gnome_druid_new_with_window")
  (return-type "GtkWidget*")
  (parameters
    '("const-char*" "title")
    '("GtkWindow*" "parent")
    '("gboolean" "close_on_cancel")
    '("GtkWidget**" "window")
  )
)

(define-method construct_with_window
  (of-object "GnomeDruid")
  (c-name "gnome_druid_construct_with_window")
  (return-type "none")
  (parameters
    '("const-char*" "title")
    '("GtkWindow*" "parent")
    '("gboolean" "close_on_cancel")
    '("GtkWidget**" "window")
  )
)

(define-function entry_get_type
  (c-name "gnome_entry_get_type")
  (return-type "GType")
)

(define-function entry_new
  (is-constructor-of "GnomeEntry")
  (c-name "gnome_entry_new")
  (return-type "GtkWidget*")
  (properties
    '("history_id")
  )
)

(define-method construct
  (of-object "GnomeEntry")
  (c-name "gnome_entry_construct")
  (return-type "none")
  (parameters
    '("const-gchar*" "history_id")
  )
)

(define-method gtk_entry
  (of-object "GnomeEntry")
  (c-name "gnome_entry_gtk_entry")
  (return-type "GtkWidget*")
)

(define-method get_history_id
  (of-object "GnomeEntry")
  (c-name "gnome_entry_get_history_id")
  (return-type "const-gchar*")
)

(define-method set_history_id
  (of-object "GnomeEntry")
  (c-name "gnome_entry_set_history_id")
  (return-type "none")
  (parameters
    '("const-gchar*" "history_id")
  )
)

(define-method set_max_saved
  (of-object "GnomeEntry")
  (c-name "gnome_entry_set_max_saved")
  (return-type "none")
  (parameters
    '("guint" "max_saved")
  )
)

(define-method get_max_saved
  (of-object "GnomeEntry")
  (c-name "gnome_entry_get_max_saved")
  (return-type "guint")
)

(define-method prepend_history
  (of-object "GnomeEntry")
  (c-name "gnome_entry_prepend_history")
  (return-type "none")
  (parameters
    '("gboolean" "save")
    '("const-gchar*" "text")
  )
)

(define-method append_history
  (of-object "GnomeEntry")
  (c-name "gnome_entry_append_history")
  (return-type "none")
  (parameters
    '("gboolean" "save")
    '("const-gchar*" "text")
  )
)

(define-method clear_history
  (of-object "GnomeEntry")
  (c-name "gnome_entry_clear_history")
  (return-type "none")
)

(define-function file_entry_get_type
  (c-name "gnome_file_entry_get_type")
  (return-type "GType")
)

(define-function file_entry_new
  (is-constructor-of "GnomeFileEntry")
  (c-name "gnome_file_entry_new")
  (return-type "GtkWidget*")
  (properties
    '("history_id")
    '("browse_dialog_title")
  )
)

(define-method construct
  (of-object "GnomeFileEntry")
  (c-name "gnome_file_entry_construct")
  (return-type "none")
  (parameters
    '("const-char*" "history_id")
    '("const-char*" "browse_dialog_title")
  )
)

(define-method gnome_entry
  (of-object "GnomeFileEntry")
  (c-name "gnome_file_entry_gnome_entry")
  (return-type "GtkWidget*")
)

(define-method gtk_entry
  (of-object "GnomeFileEntry")
  (c-name "gnome_file_entry_gtk_entry")
  (return-type "GtkWidget*")
)

(define-method set_title
  (of-object "GnomeFileEntry")
  (c-name "gnome_file_entry_set_title")
  (return-type "none")
  (parameters
    '("const-char*" "browse_dialog_title")
  )
)

(define-method set_default_path
  (of-object "GnomeFileEntry")
  (c-name "gnome_file_entry_set_default_path")
  (return-type "none")
  (parameters
    '("const-char*" "path")
  )
)

(define-method set_directory_entry
  (of-object "GnomeFileEntry")
  (c-name "gnome_file_entry_set_directory_entry")
  (return-type "none")
  (parameters
    '("gboolean" "directory_entry")
  )
)

(define-method get_directory_entry
  (of-object "GnomeFileEntry")
  (c-name "gnome_file_entry_get_directory_entry")
  (return-type "gboolean")
)

(define-method get_full_path
  (of-object "GnomeFileEntry")
  (c-name "gnome_file_entry_get_full_path")
  (return-type "char*")
  (parameters
    '("gboolean" "file_must_exist")
  )
)

(define-method set_filename
  (of-object "GnomeFileEntry")
  (c-name "gnome_file_entry_set_filename")
  (return-type "none")
  (parameters
    '("const-char*" "filename")
  )
)

(define-method set_modal
  (of-object "GnomeFileEntry")
  (c-name "gnome_file_entry_set_modal")
  (return-type "none")
  (parameters
    '("gboolean" "is_modal")
  )
)

(define-method get_modal
  (of-object "GnomeFileEntry")
  (c-name "gnome_file_entry_get_modal")
  (return-type "gboolean")
)

(define-method set_directory
  (of-object "GnomeFileEntry")
  (c-name "gnome_file_entry_set_directory")
  (return-type "none")
  (parameters
    '("gboolean" "directory_entry")
  )
)

(define-function font_picker_get_type
  (c-name "gnome_font_picker_get_type")
  (return-type "GType")
)

(define-function font_picker_new
  (is-constructor-of "GnomeFontPicker")
  (c-name "gnome_font_picker_new")
  (return-type "GtkWidget*")
)

(define-method set_title
  (of-object "GnomeFontPicker")
  (c-name "gnome_font_picker_set_title")
  (return-type "none")
  (parameters
    '("const-gchar*" "title")
  )
)

(define-method get_title
  (of-object "GnomeFontPicker")
  (c-name "gnome_font_picker_get_title")
  (return-type "const-gchar*")
)

(define-method get_mode
  (of-object "GnomeFontPicker")
  (c-name "gnome_font_picker_get_mode")
  (return-type "GnomeFontPickerMode")
)

(define-method set_mode
  (of-object "GnomeFontPicker")
  (c-name "gnome_font_picker_set_mode")
  (return-type "none")
  (parameters
    '("GnomeFontPickerMode" "mode")
  )
)

(define-method fi_set_use_font_in_label
  (of-object "GnomeFontPicker")
  (c-name "gnome_font_picker_fi_set_use_font_in_label")
  (return-type "none")
  (parameters
    '("gboolean" "use_font_in_label")
    '("gint" "size")
  )
)

(define-method fi_set_show_size
  (of-object "GnomeFontPicker")
  (c-name "gnome_font_picker_fi_set_show_size")
  (return-type "none")
  (parameters
    '("gboolean" "show_size")
  )
)

(define-method uw_set_widget
  (of-object "GnomeFontPicker")
  (c-name "gnome_font_picker_uw_set_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
  )
)

(define-method uw_get_widget
  (of-object "GnomeFontPicker")
  (c-name "gnome_font_picker_uw_get_widget")
  (return-type "GtkWidget*")
)

(define-method get_font_name
  (of-object "GnomeFontPicker")
  (c-name "gnome_font_picker_get_font_name")
  (return-type "const-gchar*")
)

(define-method get_font
  (of-object "GnomeFontPicker")
  (c-name "gnome_font_picker_get_font")
  (return-type "GdkFont*")
)

(define-method set_font_name
  (of-object "GnomeFontPicker")
  (c-name "gnome_font_picker_set_font_name")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "fontname")
  )
)

(define-method get_preview_text
  (of-object "GnomeFontPicker")
  (c-name "gnome_font_picker_get_preview_text")
  (return-type "const-gchar*")
)

(define-method set_preview_text
  (of-object "GnomeFontPicker")
  (c-name "gnome_font_picker_set_preview_text")
  (return-type "none")
  (parameters
    '("const-gchar*" "text")
  )
)

(define-function help_display_on_screen
  (c-name "gnome_help_display_on_screen")
  (return-type "gboolean")
  (parameters
    '("const-char*" "file_name")
    '("const-char*" "link_id")
    '("GdkScreen*" "screen")
    '("GError**" "error")
  )
)

(define-function help_display_with_doc_id_on_screen
  (c-name "gnome_help_display_with_doc_id_on_screen")
  (return-type "gboolean")
  (parameters
    '("GnomeProgram*" "program")
    '("const-char*" "doc_id")
    '("const-char*" "file_name")
    '("const-char*" "link_id")
    '("GdkScreen*" "screen")
    '("GError**" "error")
  )
)

(define-function help_display_desktop_on_screen
  (c-name "gnome_help_display_desktop_on_screen")
  (return-type "gboolean")
  (parameters
    '("GnomeProgram*" "program")
    '("const-char*" "doc_id")
    '("const-char*" "file_name")
    '("const-char*" "link_id")
    '("GdkScreen*" "screen")
    '("GError**" "error")
  )
)

(define-function help_display_uri_on_screen
  (c-name "gnome_help_display_uri_on_screen")
  (return-type "gboolean")
  (parameters
    '("const-char*" "help_uri")
    '("GdkScreen*" "screen")
    '("GError**" "error")
  )
)

(define-function href_get_type
  (c-name "gnome_href_get_type")
  (return-type "GType")
)

(define-function href_new
  (is-constructor-of "GnomeHRef")
  (c-name "gnome_href_new")
  (return-type "GtkWidget*")
  (properties
    '("url")
    '("text")
  )
)

(define-method construct
  (of-object "GnomeHRef")
  (c-name "gnome_href_construct")
  (return-type "none")
  (parameters
    '("const-gchar*" "url")
    '("const-gchar*" "text")
  )
)

(define-method set_url
  (of-object "GnomeHRef")
  (c-name "gnome_href_set_url")
  (return-type "none")
  (parameters
    '("const-gchar*" "url")
  )
)

(define-method get_url
  (of-object "GnomeHRef")
  (c-name "gnome_href_get_url")
  (return-type "const-gchar*")
)

(define-method set_text
  (of-object "GnomeHRef")
  (c-name "gnome_href_set_text")
  (return-type "none")
  (parameters
    '("const-gchar*" "text")
  )
)

(define-method get_text
  (of-object "GnomeHRef")
  (c-name "gnome_href_get_text")
  (return-type "const-gchar*")
)

(define-method set_label
  (of-object "GnomeHRef")
  (c-name "gnome_href_set_label")
  (return-type "none")
  (parameters
    '("const-gchar*" "label")
  )
)

(define-method get_label
  (of-object "GnomeHRef")
  (c-name "gnome_href_get_label")
  (return-type "const-gchar*")
)

(define-function ice_init
  (c-name "gnome_ice_init")
  (return-type "none")
)

(define-function icon_entry_get_type
  (c-name "gnome_icon_entry_get_type")
  (return-type "GType")
)

(define-function icon_entry_new
  (is-constructor-of "GnomeIconEntry")
  (c-name "gnome_icon_entry_new")
  (return-type "GtkWidget*")
  (properties
    '("history_id")
    '("browse_dialog_title")
  )
)

(define-method construct
  (of-object "GnomeIconEntry")
  (c-name "gnome_icon_entry_construct")
  (return-type "none")
  (parameters
    '("const-gchar*" "history_id")
    '("const-gchar*" "browse_dialog_title")
  )
)

(define-method set_pixmap_subdir
  (of-object "GnomeIconEntry")
  (c-name "gnome_icon_entry_set_pixmap_subdir")
  (return-type "none")
  (parameters
    '("const-gchar*" "subdir")
  )
)

(define-method get_filename
  (of-object "GnomeIconEntry")
  (c-name "gnome_icon_entry_get_filename")
  (return-type "gchar*")
)

(define-method set_filename
  (of-object "GnomeIconEntry")
  (c-name "gnome_icon_entry_set_filename")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "filename")
  )
)

(define-method set_browse_dialog_title
  (of-object "GnomeIconEntry")
  (c-name "gnome_icon_entry_set_browse_dialog_title")
  (return-type "none")
  (parameters
    '("const-gchar*" "browse_dialog_title")
  )
)

(define-method set_history_id
  (of-object "GnomeIconEntry")
  (c-name "gnome_icon_entry_set_history_id")
  (return-type "none")
  (parameters
    '("const-gchar*" "history_id")
  )
)

(define-method set_max_saved
  (of-object "GnomeIconEntry")
  (c-name "gnome_icon_entry_set_max_saved")
  (return-type "none")
  (parameters
    '("guint" "max_saved")
  )
)

(define-method pick_dialog
  (of-object "GnomeIconEntry")
  (c-name "gnome_icon_entry_pick_dialog")
  (return-type "GtkWidget*")
)

(define-method set_icon
  (of-object "GnomeIconEntry")
  (c-name "gnome_icon_entry_set_icon")
  (return-type "none")
  (parameters
    '("const-gchar*" "filename")
  )
)

(define-method gnome_file_entry
  (of-object "GnomeIconEntry")
  (c-name "gnome_icon_entry_gnome_file_entry")
  (return-type "GtkWidget*")
)

(define-method gnome_entry
  (of-object "GnomeIconEntry")
  (c-name "gnome_icon_entry_gnome_entry")
  (return-type "GtkWidget*")
)

(define-method gtk_entry
  (of-object "GnomeIconEntry")
  (c-name "gnome_icon_entry_gtk_entry")
  (return-type "GtkWidget*")
)

(define-function icon_text_item_get_type
  (c-name "gnome_icon_text_item_get_type")
  (return-type "GType")
)

(define-method configure
  (of-object "GnomeIconTextItem")
  (c-name "gnome_icon_text_item_configure")
  (return-type "none")
  (parameters
    '("int" "x")
    '("int" "y")
    '("int" "width")
    '("const-char*" "fontname")
    '("const-char*" "text")
    '("gboolean" "is_editable")
    '("gboolean" "is_static")
  )
)

(define-method setxy
  (of-object "GnomeIconTextItem")
  (c-name "gnome_icon_text_item_setxy")
  (return-type "none")
  (parameters
    '("int" "x")
    '("int" "y")
  )
)

(define-method select
  (of-object "GnomeIconTextItem")
  (c-name "gnome_icon_text_item_select")
  (return-type "none")
  (parameters
    '("int" "sel")
  )
)

(define-method focus
  (of-object "GnomeIconTextItem")
  (c-name "gnome_icon_text_item_focus")
  (return-type "none")
  (parameters
    '("int" "focused")
  )
)

(define-method get_text
  (of-object "GnomeIconTextItem")
  (c-name "gnome_icon_text_item_get_text")
  (return-type "const-char*")
)

(define-method start_editing
  (of-object "GnomeIconTextItem")
  (c-name "gnome_icon_text_item_start_editing")
  (return-type "none")
)

(define-method stop_editing
  (of-object "GnomeIconTextItem")
  (c-name "gnome_icon_text_item_stop_editing")
  (return-type "none")
  (parameters
    '("gboolean" "accept")
  )
)

(define-method get_editable
  (of-object "GnomeIconTextItem")
  (c-name "gnome_icon_text_item_get_editable")
  (return-type "GtkEditable*")
)

(define-function icon_list_get_type
  (c-name "gnome_icon_list_get_type")
  (return-type "GType")
)

(define-function icon_list_new
  (is-constructor-of "GnomeIconList")
  (c-name "gnome_icon_list_new")
  (return-type "GtkWidget*")
  (parameters
    '("guint" "icon_width")
    '("GtkAdjustment*" "adj")
    '("int" "flags")
  )
)

(define-method construct
  (of-object "GnomeIconList")
  (c-name "gnome_icon_list_construct")
  (return-type "none")
  (parameters
    '("guint" "icon_width")
    '("GtkAdjustment*" "adj")
    '("int" "flags")
  )
)

(define-method set_hadjustment
  (of-object "GnomeIconList")
  (c-name "gnome_icon_list_set_hadjustment")
  (return-type "none")
  (parameters
    '("GtkAdjustment*" "hadj")
  )
)

(define-method set_vadjustment
  (of-object "GnomeIconList")
  (c-name "gnome_icon_list_set_vadjustment")
  (return-type "none")
  (parameters
    '("GtkAdjustment*" "vadj")
  )
)

(define-method freeze
  (of-object "GnomeIconList")
  (c-name "gnome_icon_list_freeze")
  (return-type "none")
)

(define-method thaw
  (of-object "GnomeIconList")
  (c-name "gnome_icon_list_thaw")
  (return-type "none")
)

(define-method insert
  (of-object "GnomeIconList")
  (c-name "gnome_icon_list_insert")
  (return-type "none")
  (parameters
    '("int" "idx")
    '("const-char*" "icon_filename")
    '("const-char*" "text")
  )
)

(define-method insert_pixbuf
  (of-object "GnomeIconList")
  (c-name "gnome_icon_list_insert_pixbuf")
  (return-type "none")
  (parameters
    '("int" "idx")
    '("GdkPixbuf*" "im")
    '("const-char*" "icon_filename")
    '("const-char*" "text")
  )
)

(define-method append
  (of-object "GnomeIconList")
  (c-name "gnome_icon_list_append")
  (return-type "int")
  (parameters
    '("const-char*" "icon_filename")
    '("const-char*" "text")
  )
)

(define-method append_pixbuf
  (of-object "GnomeIconList")
  (c-name "gnome_icon_list_append_pixbuf")
  (return-type "int")
  (parameters
    '("GdkPixbuf*" "im")
    '("const-char*" "icon_filename")
    '("const-char*" "text")
  )
)

(define-method clear
  (of-object "GnomeIconList")
  (c-name "gnome_icon_list_clear")
  (return-type "none")
)

(define-method remove
  (of-object "GnomeIconList")
  (c-name "gnome_icon_list_remove")
  (return-type "none")
  (parameters
    '("int" "idx")
  )
)

(define-method get_num_icons
  (of-object "GnomeIconList")
  (c-name "gnome_icon_list_get_num_icons")
  (return-type "guint")
)

(define-method get_selection_mode
  (of-object "GnomeIconList")
  (c-name "gnome_icon_list_get_selection_mode")
  (return-type "GtkSelectionMode")
)

(define-method set_selection_mode
  (of-object "GnomeIconList")
  (c-name "gnome_icon_list_set_selection_mode")
  (return-type "none")
  (parameters
    '("GtkSelectionMode" "mode")
  )
)

(define-method select_icon
  (of-object "GnomeIconList")
  (c-name "gnome_icon_list_select_icon")
  (return-type "none")
  (parameters
    '("int" "idx")
  )
)

(define-method unselect_icon
  (of-object "GnomeIconList")
  (c-name "gnome_icon_list_unselect_icon")
  (return-type "none")
  (parameters
    '("int" "idx")
  )
)

(define-method select_all
  (of-object "GnomeIconList")
  (c-name "gnome_icon_list_select_all")
  (return-type "none")
)

(define-method unselect_all
  (of-object "GnomeIconList")
  (c-name "gnome_icon_list_unselect_all")
  (return-type "int")
)

(define-method get_selection
  (of-object "GnomeIconList")
  (c-name "gnome_icon_list_get_selection")
  (return-type "GList*")
)

(define-method focus_icon
  (of-object "GnomeIconList")
  (c-name "gnome_icon_list_focus_icon")
  (return-type "none")
  (parameters
    '("gint" "idx")
  )
)

(define-method set_icon_width
  (of-object "GnomeIconList")
  (c-name "gnome_icon_list_set_icon_width")
  (return-type "none")
  (parameters
    '("int" "w")
  )
)

(define-method set_row_spacing
  (of-object "GnomeIconList")
  (c-name "gnome_icon_list_set_row_spacing")
  (return-type "none")
  (parameters
    '("int" "pixels")
  )
)

(define-method set_col_spacing
  (of-object "GnomeIconList")
  (c-name "gnome_icon_list_set_col_spacing")
  (return-type "none")
  (parameters
    '("int" "pixels")
  )
)

(define-method set_text_spacing
  (of-object "GnomeIconList")
  (c-name "gnome_icon_list_set_text_spacing")
  (return-type "none")
  (parameters
    '("int" "pixels")
  )
)

(define-method set_icon_border
  (of-object "GnomeIconList")
  (c-name "gnome_icon_list_set_icon_border")
  (return-type "none")
  (parameters
    '("int" "pixels")
  )
)

(define-method set_separators
  (of-object "GnomeIconList")
  (c-name "gnome_icon_list_set_separators")
  (return-type "none")
  (parameters
    '("const-char*" "sep")
  )
)

(define-method get_icon_filename
  (of-object "GnomeIconList")
  (c-name "gnome_icon_list_get_icon_filename")
  (return-type "gchar*")
  (parameters
    '("int" "idx")
  )
)

(define-method find_icon_from_filename
  (of-object "GnomeIconList")
  (c-name "gnome_icon_list_find_icon_from_filename")
  (return-type "int")
  (parameters
    '("const-char*" "filename")
  )
)

(define-method set_icon_data
  (of-object "GnomeIconList")
  (c-name "gnome_icon_list_set_icon_data")
  (return-type "none")
  (parameters
    '("int" "idx")
    '("gpointer" "data")
  )
)

(define-method set_icon_data_full
  (of-object "GnomeIconList")
  (c-name "gnome_icon_list_set_icon_data_full")
  (return-type "none")
  (parameters
    '("int" "idx")
    '("gpointer" "data")
    '("GtkDestroyNotify" "destroy")
  )
)

(define-method find_icon_from_data
  (of-object "GnomeIconList")
  (c-name "gnome_icon_list_find_icon_from_data")
  (return-type "int")
  (parameters
    '("gpointer" "data")
  )
)

(define-method get_icon_data
  (of-object "GnomeIconList")
  (c-name "gnome_icon_list_get_icon_data")
  (return-type "gpointer")
  (parameters
    '("int" "idx")
  )
)

(define-method moveto
  (of-object "GnomeIconList")
  (c-name "gnome_icon_list_moveto")
  (return-type "none")
  (parameters
    '("int" "idx")
    '("double" "yalign")
  )
)

(define-method icon_is_visible
  (of-object "GnomeIconList")
  (c-name "gnome_icon_list_icon_is_visible")
  (return-type "GtkVisibility")
  (parameters
    '("int" "idx")
  )
)

(define-method get_icon_at
  (of-object "GnomeIconList")
  (c-name "gnome_icon_list_get_icon_at")
  (return-type "int")
  (parameters
    '("int" "x")
    '("int" "y")
  )
)

(define-method get_items_per_line
  (of-object "GnomeIconList")
  (c-name "gnome_icon_list_get_items_per_line")
  (return-type "int")
)

(define-method get_icon_text_item
  (of-object "GnomeIconList")
  (c-name "gnome_icon_list_get_icon_text_item")
  (return-type "GnomeIconTextItem*")
  (parameters
    '("int" "idx")
  )
)

(define-method get_icon_pixbuf_item
  (of-object "GnomeIconList")
  (c-name "gnome_icon_list_get_icon_pixbuf_item")
  (return-type "GnomeCanvasPixbuf*")
  (parameters
    '("int" "idx")
  )
)

(define-function icon_lookup
  (c-name "gnome_icon_lookup")
  (return-type "char*")
  (parameters
    '("GtkIconTheme*" "icon_theme")
    '("GnomeThumbnailFactory*" "thumbnail_factory")
    '("const-char*" "file_uri")
    '("const-char*" "custom_icon")
    '("GnomeVFSFileInfo*" "file_info")
    '("const-char*" "mime_type")
    '("GnomeIconLookupFlags" "flags")
    '("GnomeIconLookupResultFlags*" "result")
  )
)

(define-function icon_lookup_sync
  (c-name "gnome_icon_lookup_sync")
  (return-type "char*")
  (parameters
    '("GtkIconTheme*" "icon_theme")
    '("GnomeThumbnailFactory*" "thumbnail_factory")
    '("const-char*" "file_uri")
    '("const-char*" "custom_icon")
    '("GnomeIconLookupFlags" "flags")
    '("GnomeIconLookupResultFlags*" "result")
  )
)

(define-function icon_selection_get_type
  (c-name "gnome_icon_selection_get_type")
  (return-type "GType")
)

(define-function icon_selection_new
  (is-constructor-of "GnomeIconSelection")
  (c-name "gnome_icon_selection_new")
  (return-type "GtkWidget*")
)

(define-method add_defaults
  (of-object "GnomeIconSelection")
  (c-name "gnome_icon_selection_add_defaults")
  (return-type "none")
)

(define-method add_directory
  (of-object "GnomeIconSelection")
  (c-name "gnome_icon_selection_add_directory")
  (return-type "none")
  (parameters
    '("const-gchar*" "dir")
  )
)

(define-method show_icons
  (of-object "GnomeIconSelection")
  (c-name "gnome_icon_selection_show_icons")
  (return-type "none")
)

(define-method clear
  (of-object "GnomeIconSelection")
  (c-name "gnome_icon_selection_clear")
  (return-type "none")
  (parameters
    '("gboolean" "not_shown")
  )
)

(define-method get_icon
  (of-object "GnomeIconSelection")
  (c-name "gnome_icon_selection_get_icon")
  (return-type "gchar*")
  (parameters
    '("gboolean" "full_path")
  )
)

(define-method select_icon
  (of-object "GnomeIconSelection")
  (c-name "gnome_icon_selection_select_icon")
  (return-type "none")
  (parameters
    '("const-gchar*" "filename")
  )
)

(define-method stop_loading
  (of-object "GnomeIconSelection")
  (c-name "gnome_icon_selection_stop_loading")
  (return-type "none")
)

(define-method get_gil
  (of-object "GnomeIconSelection")
  (c-name "gnome_icon_selection_get_gil")
  (return-type "GtkWidget*")
)

(define-method get_box
  (of-object "GnomeIconSelection")
  (c-name "gnome_icon_selection_get_box")
  (return-type "GtkWidget*")
)

(define-function icon_theme_get_type
  (c-name "gnome_icon_theme_get_type")
  (return-type "GType")
)

(define-function icon_theme_new
  (is-constructor-of "GnomeIconTheme")
  (c-name "gnome_icon_theme_new")
  (return-type "GnomeIconTheme*")
)

(define-method set_search_path
  (of-object "GnomeIconTheme")
  (c-name "gnome_icon_theme_set_search_path")
  (return-type "none")
  (parameters
    '("const-char*[]" "path")
    '("int" "n_elements")
  )
)

(define-method get_search_path
  (of-object "GnomeIconTheme")
  (c-name "gnome_icon_theme_get_search_path")
  (return-type "none")
  (parameters
    '("char**[]" "path")
    '("int*" "n_elements")
  )
)

(define-method set_allow_svg
  (of-object "GnomeIconTheme")
  (c-name "gnome_icon_theme_set_allow_svg")
  (return-type "none")
  (parameters
    '("gboolean" "allow_svg")
  )
)

(define-method get_allow_svg
  (of-object "GnomeIconTheme")
  (c-name "gnome_icon_theme_get_allow_svg")
  (return-type "gboolean")
)

(define-method append_search_path
  (of-object "GnomeIconTheme")
  (c-name "gnome_icon_theme_append_search_path")
  (return-type "none")
  (parameters
    '("const-char*" "path")
  )
)

(define-method prepend_search_path
  (of-object "GnomeIconTheme")
  (c-name "gnome_icon_theme_prepend_search_path")
  (return-type "none")
  (parameters
    '("const-char*" "path")
  )
)

(define-method set_custom_theme
  (of-object "GnomeIconTheme")
  (c-name "gnome_icon_theme_set_custom_theme")
  (return-type "none")
  (parameters
    '("const-char*" "theme_name")
  )
)

(define-method lookup_icon
  (of-object "GnomeIconTheme")
  (c-name "gnome_icon_theme_lookup_icon")
  (return-type "char*")
  (parameters
    '("const-char*" "icon_name")
    '("int" "size")
    '("const-GnomeIconData**" "icon_data")
    '("int*" "base_size")
  )
)

(define-method has_icon
  (of-object "GnomeIconTheme")
  (c-name "gnome_icon_theme_has_icon")
  (return-type "gboolean")
  (parameters
    '("const-char*" "icon_name")
  )
)

(define-method list_icons
  (of-object "GnomeIconTheme")
  (c-name "gnome_icon_theme_list_icons")
  (return-type "GList*")
  (parameters
    '("const-char*" "context")
  )
)

(define-method get_example_icon_name
  (of-object "GnomeIconTheme")
  (c-name "gnome_icon_theme_get_example_icon_name")
  (return-type "char*")
)

(define-method rescan_if_needed
  (of-object "GnomeIconTheme")
  (c-name "gnome_icon_theme_rescan_if_needed")
  (return-type "gboolean")
)

(define-method dup
  (of-object "GnomeIconData")
  (c-name "gnome_icon_data_dup")
  (return-type "GnomeIconData*")
)

(define-method free
  (of-object "GnomeIconData")
  (c-name "gnome_icon_data_free")
  (return-type "none")
)

(define-function mdi_child_get_type
  (c-name "gnome_mdi_child_get_type")
  (return-type "GType")
)

(define-method add_view
  (of-object "GnomeMDIChild")
  (c-name "gnome_mdi_child_add_view")
  (return-type "GtkWidget*")
)

(define-method remove_view
  (of-object "GnomeMDIChild")
  (c-name "gnome_mdi_child_remove_view")
  (return-type "none")
  (parameters
    '("GtkWidget*" "view")
  )
)

(define-method set_name
  (of-object "GnomeMDIChild")
  (c-name "gnome_mdi_child_set_name")
  (return-type "none")
  (parameters
    '("const-gchar*" "name")
  )
)

(define-method set_menu_template
  (of-object "GnomeMDIChild")
  (c-name "gnome_mdi_child_set_menu_template")
  (return-type "none")
  (parameters
    '("GnomeUIInfo*" "menu_tmpl")
  )
)

(define-function mdi_generic_child_get_type
  (c-name "gnome_mdi_generic_child_get_type")
  (return-type "GType")
)

(define-function mdi_generic_child_new
  (is-constructor-of "GnomeMDIGenericChild")
  (c-name "gnome_mdi_generic_child_new")
  (return-type "GnomeMDIGenericChild*")
  (parameters
    '("const-gchar*" "name")
  )
)

(define-method set_view_creator
  (of-object "GnomeMDIGenericChild")
  (c-name "gnome_mdi_generic_child_set_view_creator")
  (return-type "none")
  (parameters
    '("GnomeMDIChildViewCreator" "func")
    '("gpointer" "data")
  )
)

(define-method set_view_creator_full
  (of-object "GnomeMDIGenericChild")
  (c-name "gnome_mdi_generic_child_set_view_creator_full")
  (return-type "none")
  (parameters
    '("GnomeMDIChildViewCreator" "func")
    '("GtkCallbackMarshal" "marshal")
    '("gpointer" "data")
    '("GtkDestroyNotify" "notify")
  )
)

(define-method set_menu_creator
  (of-object "GnomeMDIGenericChild")
  (c-name "gnome_mdi_generic_child_set_menu_creator")
  (return-type "none")
  (parameters
    '("GnomeMDIChildMenuCreator" "func")
    '("gpointer" "data")
  )
)

(define-method set_menu_creator_full
  (of-object "GnomeMDIGenericChild")
  (c-name "gnome_mdi_generic_child_set_menu_creator_full")
  (return-type "none")
  (parameters
    '("GnomeMDIChildMenuCreator" "func")
    '("GtkCallbackMarshal" "marshal")
    '("gpointer" "data")
    '("GtkDestroyNotify" "notify")
  )
)

(define-method set_config_func
  (of-object "GnomeMDIGenericChild")
  (c-name "gnome_mdi_generic_child_set_config_func")
  (return-type "none")
  (parameters
    '("GnomeMDIChildConfigFunc" "func")
    '("gpointer" "data")
  )
)

(define-method set_config_func_full
  (of-object "GnomeMDIGenericChild")
  (c-name "gnome_mdi_generic_child_set_config_func_full")
  (return-type "none")
  (parameters
    '("GnomeMDIChildConfigFunc" "func")
    '("GtkCallbackMarshal" "marshal")
    '("gpointer" "data")
    '("GtkDestroyNotify" "notify")
  )
)

(define-method set_label_func
  (of-object "GnomeMDIGenericChild")
  (c-name "gnome_mdi_generic_child_set_label_func")
  (return-type "none")
  (parameters
    '("GnomeMDIChildLabelFunc" "func")
    '("gpointer" "data")
  )
)

(define-method set_label_func_full
  (of-object "GnomeMDIGenericChild")
  (c-name "gnome_mdi_generic_child_set_label_func_full")
  (return-type "none")
  (parameters
    '("GnomeMDIChildLabelFunc" "func")
    '("GtkCallbackMarshal" "marshal")
    '("gpointer" "data")
    '("GtkDestroyNotify" "notify")
  )
)

(define-method restore_state
  (of-object "GnomeMDI")
  (c-name "gnome_mdi_restore_state")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "section")
    '("GnomeMDIChildCreator" "create_child_func")
  )
)

(define-method save_state
  (of-object "GnomeMDI")
  (c-name "gnome_mdi_save_state")
  (return-type "none")
  (parameters
    '("const-gchar*" "section")
  )
)

(define-function mdi_get_type
  (c-name "gnome_mdi_get_type")
  (return-type "GType")
)

(define-function mdi_new
  (is-constructor-of "GnomeMDI")
  (c-name "gnome_mdi_new")
  (return-type "GtkObject*")
  (parameters
    '("const-gchar*" "appname")
    '("const-gchar*" "title")
  )
)

(define-method set_mode
  (of-object "GnomeMDI")
  (c-name "gnome_mdi_set_mode")
  (return-type "none")
  (parameters
    '("GnomeMDIMode" "mode")
  )
)

(define-method set_menubar_template
  (of-object "GnomeMDI")
  (c-name "gnome_mdi_set_menubar_template")
  (return-type "none")
  (parameters
    '("GnomeUIInfo*" "menu_tmpl")
  )
)

(define-method set_toolbar_template
  (of-object "GnomeMDI")
  (c-name "gnome_mdi_set_toolbar_template")
  (return-type "none")
  (parameters
    '("GnomeUIInfo*" "tbar_tmpl")
  )
)

(define-method set_child_menu_path
  (of-object "GnomeMDI")
  (c-name "gnome_mdi_set_child_menu_path")
  (return-type "none")
  (parameters
    '("const-gchar*" "path")
  )
)

(define-method set_child_list_path
  (of-object "GnomeMDI")
  (c-name "gnome_mdi_set_child_list_path")
  (return-type "none")
  (parameters
    '("const-gchar*" "path")
  )
)

(define-method add_view
  (of-object "GnomeMDI")
  (c-name "gnome_mdi_add_view")
  (return-type "gint")
  (parameters
    '("GnomeMDIChild*" "child")
  )
)

(define-method add_toplevel_view
  (of-object "GnomeMDI")
  (c-name "gnome_mdi_add_toplevel_view")
  (return-type "gint")
  (parameters
    '("GnomeMDIChild*" "child")
  )
)

(define-method remove_view
  (of-object "GnomeMDI")
  (c-name "gnome_mdi_remove_view")
  (return-type "gint")
  (parameters
    '("GtkWidget*" "view")
    '("gint" "force")
  )
)

(define-method get_active_view
  (of-object "GnomeMDI")
  (c-name "gnome_mdi_get_active_view")
  (return-type "GtkWidget*")
)

(define-method set_active_view
  (of-object "GnomeMDI")
  (c-name "gnome_mdi_set_active_view")
  (return-type "none")
  (parameters
    '("GtkWidget*" "view")
  )
)

(define-method add_child
  (of-object "GnomeMDI")
  (c-name "gnome_mdi_add_child")
  (return-type "gint")
  (parameters
    '("GnomeMDIChild*" "child")
  )
)

(define-method remove_child
  (of-object "GnomeMDI")
  (c-name "gnome_mdi_remove_child")
  (return-type "gint")
  (parameters
    '("GnomeMDIChild*" "child")
    '("gint" "force")
  )
)

(define-method remove_all
  (of-object "GnomeMDI")
  (c-name "gnome_mdi_remove_all")
  (return-type "gint")
  (parameters
    '("gint" "force")
  )
)

(define-method open_toplevel
  (of-object "GnomeMDI")
  (c-name "gnome_mdi_open_toplevel")
  (return-type "none")
)

(define-method update_child
  (of-object "GnomeMDI")
  (c-name "gnome_mdi_update_child")
  (return-type "none")
  (parameters
    '("GnomeMDIChild*" "child")
  )
)

(define-method get_active_child
  (of-object "GnomeMDI")
  (c-name "gnome_mdi_get_active_child")
  (return-type "GnomeMDIChild*")
)

(define-method find_child
  (of-object "GnomeMDI")
  (c-name "gnome_mdi_find_child")
  (return-type "GnomeMDIChild*")
  (parameters
    '("const-gchar*" "name")
  )
)

(define-method get_active_window
  (of-object "GnomeMDI")
  (c-name "gnome_mdi_get_active_window")
  (return-type "GnomeApp*")
)

(define-method register
  (of-object "GnomeMDI")
  (c-name "gnome_mdi_register")
  (return-type "none")
  (parameters
    '("GtkObject*" "object")
  )
)

(define-method unregister
  (of-object "GnomeMDI")
  (c-name "gnome_mdi_unregister")
  (return-type "none")
  (parameters
    '("GtkObject*" "object")
  )
)

(define-function mdi_get_app_from_view
  (c-name "gnome_mdi_get_app_from_view")
  (return-type "GnomeApp*")
  (parameters
    '("GtkWidget*" "view")
  )
)

(define-function mdi_get_child_from_view
  (c-name "gnome_mdi_get_child_from_view")
  (return-type "GnomeMDIChild*")
  (parameters
    '("GtkWidget*" "view")
  )
)

(define-method get_view_from_window
  (of-object "GnomeMDI")
  (c-name "gnome_mdi_get_view_from_window")
  (return-type "GtkWidget*")
  (parameters
    '("GnomeApp*" "app")
  )
)

(define-function mdi_get_menubar_info
  (c-name "gnome_mdi_get_menubar_info")
  (return-type "GnomeUIInfo*")
  (parameters
    '("GnomeApp*" "app")
  )
)

(define-function mdi_get_toolbar_info
  (c-name "gnome_mdi_get_toolbar_info")
  (return-type "GnomeUIInfo*")
  (parameters
    '("GnomeApp*" "app")
  )
)

(define-function mdi_get_child_menu_info
  (c-name "gnome_mdi_get_child_menu_info")
  (return-type "GnomeUIInfo*")
  (parameters
    '("GnomeApp*" "app")
  )
)

(define-function message_box_get_type
  (c-name "gnome_message_box_get_type")
  (return-type "GType")
)

(define-function message_box_new
  (is-constructor-of "GnomeMessageBox")
  (c-name "gnome_message_box_new")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "message")
    '("const-gchar*" "messagebox_type")
  )
)

(define-function message_box_newv
  (is-constructor-of "GnomeMessageBox")
  (c-name "gnome_message_box_newv")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "message")
    '("const-gchar*" "messagebox_type")
    '("const-gchar**" "buttons")
  )
)

(define-method construct
  (of-object "GnomeMessageBox")
  (c-name "gnome_message_box_construct")
  (return-type "none")
  (parameters
    '("const-gchar*" "message")
    '("const-gchar*" "message_box_type")
    '("const-gchar**" "buttons")
  )
)

(define-function password_dialog_get_type
  (c-name "gnome_password_dialog_get_type")
  (return-type "GtkType")
)

(define-function password_dialog_new
  (is-constructor-of "GnomePasswordDialog")
  (c-name "gnome_password_dialog_new")
  (return-type "GtkWidget*")
  (parameters
    '("const-char*" "dialog_title")
    '("const-char*" "message")
    '("const-char*" "username")
    '("const-char*" "password")
    '("gboolean" "readonly_username")
  )
)

(define-method run_and_block
  (of-object "GnomePasswordDialog")
  (c-name "gnome_password_dialog_run_and_block")
  (return-type "gboolean")
)

(define-method set_show_username
  (of-object "GnomePasswordDialog")
  (c-name "gnome_password_dialog_set_show_username")
  (return-type "none")
  (parameters
    '("gboolean" "show")
  )
)

(define-method set_show_domain
  (of-object "GnomePasswordDialog")
  (c-name "gnome_password_dialog_set_show_domain")
  (return-type "none")
  (parameters
    '("gboolean" "show")
  )
)

(define-method set_show_password
  (of-object "GnomePasswordDialog")
  (c-name "gnome_password_dialog_set_show_password")
  (return-type "none")
  (parameters
    '("gboolean" "show")
  )
)

(define-method set_username
  (of-object "GnomePasswordDialog")
  (c-name "gnome_password_dialog_set_username")
  (return-type "none")
  (parameters
    '("const-char*" "username")
  )
)

(define-method set_domain
  (of-object "GnomePasswordDialog")
  (c-name "gnome_password_dialog_set_domain")
  (return-type "none")
  (parameters
    '("const-char*" "domain")
  )
)

(define-method set_password
  (of-object "GnomePasswordDialog")
  (c-name "gnome_password_dialog_set_password")
  (return-type "none")
  (parameters
    '("const-char*" "password")
  )
)

(define-method set_readonly_username
  (of-object "GnomePasswordDialog")
  (c-name "gnome_password_dialog_set_readonly_username")
  (return-type "none")
  (parameters
    '("gboolean" "readonly")
  )
)

(define-method set_readonly_domain
  (of-object "GnomePasswordDialog")
  (c-name "gnome_password_dialog_set_readonly_domain")
  (return-type "none")
  (parameters
    '("gboolean" "readonly")
  )
)

(define-method set_show_remember
  (of-object "GnomePasswordDialog")
  (c-name "gnome_password_dialog_set_show_remember")
  (return-type "none")
  (parameters
    '("gboolean" "show_remember")
  )
)

(define-method set_remember
  (of-object "GnomePasswordDialog")
  (c-name "gnome_password_dialog_set_remember")
  (return-type "none")
  (parameters
    '("GnomePasswordDialogRemember" "remember")
  )
)

(define-method get_remember
  (of-object "GnomePasswordDialog")
  (c-name "gnome_password_dialog_get_remember")
  (return-type "GnomePasswordDialogRemember")
)

(define-method set_show_userpass_buttons
  (of-object "GnomePasswordDialog")
  (c-name "gnome_password_dialog_set_show_userpass_buttons")
  (return-type "none")
  (parameters
    '("gboolean" "show_userpass_buttons")
  )
)

(define-method get_username
  (of-object "GnomePasswordDialog")
  (c-name "gnome_password_dialog_get_username")
  (return-type "char*")
)

(define-method get_domain
  (of-object "GnomePasswordDialog")
  (c-name "gnome_password_dialog_get_domain")
  (return-type "char*")
)

(define-method get_password
  (of-object "GnomePasswordDialog")
  (c-name "gnome_password_dialog_get_password")
  (return-type "char*")
)

(define-method anon_selected
  (of-object "GnomePasswordDialog")
  (c-name "gnome_password_dialog_anon_selected")
  (return-type "gboolean")
)

(define-function pixmap_entry_get_type
  (c-name "gnome_pixmap_entry_get_type")
  (return-type "GType")
)

(define-function pixmap_entry_new
  (is-constructor-of "GnomePixmapEntry")
  (c-name "gnome_pixmap_entry_new")
  (return-type "GtkWidget*")
  (properties
    '("history_id")
    '("browse_dialog_title")
    '("do_preview")
  )
)

(define-method construct
  (of-object "GnomePixmapEntry")
  (c-name "gnome_pixmap_entry_construct")
  (return-type "none")
  (parameters
    '("const-gchar*" "history_id")
    '("const-gchar*" "browse_dialog_title")
    '("gboolean" "do_preview")
  )
)

(define-method set_pixmap_subdir
  (of-object "GnomePixmapEntry")
  (c-name "gnome_pixmap_entry_set_pixmap_subdir")
  (return-type "none")
  (parameters
    '("const-gchar*" "subdir")
  )
)

(define-method gnome_file_entry
  (of-object "GnomePixmapEntry")
  (c-name "gnome_pixmap_entry_gnome_file_entry")
  (return-type "GtkWidget*")
)

(define-method gnome_entry
  (of-object "GnomePixmapEntry")
  (c-name "gnome_pixmap_entry_gnome_entry")
  (return-type "GtkWidget*")
)

(define-method gtk_entry
  (of-object "GnomePixmapEntry")
  (c-name "gnome_pixmap_entry_gtk_entry")
  (return-type "GtkWidget*")
)

(define-method scrolled_window
  (of-object "GnomePixmapEntry")
  (c-name "gnome_pixmap_entry_scrolled_window")
  (return-type "GtkWidget*")
)

(define-method preview_widget
  (of-object "GnomePixmapEntry")
  (c-name "gnome_pixmap_entry_preview_widget")
  (return-type "GtkWidget*")
)

(define-method set_preview
  (of-object "GnomePixmapEntry")
  (c-name "gnome_pixmap_entry_set_preview")
  (return-type "none")
  (parameters
    '("gboolean" "do_preview")
  )
)

(define-method set_preview_size
  (of-object "GnomePixmapEntry")
  (c-name "gnome_pixmap_entry_set_preview_size")
  (return-type "none")
  (parameters
    '("gint" "preview_w")
    '("gint" "preview_h")
  )
)

(define-method get_filename
  (of-object "GnomePixmapEntry")
  (c-name "gnome_pixmap_entry_get_filename")
  (return-type "gchar*")
)

(define-function pixmap_get_type
  (c-name "gnome_pixmap_get_type")
  (return-type "GType")
)

(define-function pixmap_new_from_file
  (is-constructor-of "GnomePixmapEntry")
  (c-name "gnome_pixmap_new_from_file")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "filename")
  )
)

(define-function pixmap_new_from_file_at_size
  (is-constructor-of "GnomePixmapEntry")
  (c-name "gnome_pixmap_new_from_file_at_size")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "filename")
    '("gint" "width")
    '("gint" "height")
  )
)

(define-function pixmap_new_from_xpm_d
  (is-constructor-of "GnomePixmapEntry")
  (c-name "gnome_pixmap_new_from_xpm_d")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar**" "xpm_data")
  )
)

(define-function pixmap_new_from_xpm_d_at_size
  (is-constructor-of "GnomePixmapEntry")
  (c-name "gnome_pixmap_new_from_xpm_d_at_size")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar**" "xpm_data")
    '("gint" "width")
    '("gint" "height")
  )
)

(define-function new_from_gnome_pixmap
  (c-name "gnome_pixmap_new_from_gnome_pixmap")
  (is-constructor-of GnomePixmap)
  (return-type "GtkWidget*")
  (parameters
    '("GnomePixmap*" gpixmap)
  )
)

(define-method load_file
  (of-object "GnomePixmap")
  (c-name "gnome_pixmap_load_file")
  (return-type "none")
  (parameters
    '("const-char*" "filename")
  )
)

(define-method load_file_at_size
  (of-object "GnomePixmap")
  (c-name "gnome_pixmap_load_file_at_size")
  (return-type "none")
  (parameters
    '("const-char*" "filename")
    '("int" "width")
    '("int" "height")
  )
)

(define-method load_xpm_d
  (of-object "GnomePixmap")
  (c-name "gnome_pixmap_load_xpm_d")
  (return-type "none")
  (parameters
    '("const-char**" "xpm_data")
  )
)

(define-method load_xpm_d_at_size
  (of-object "GnomePixmap")
  (c-name "gnome_pixmap_load_xpm_d_at_size")
  (return-type "none")
  (parameters
    '("const-char**" "xpm_data")
    '("int" "width")
    '("int" "height")
  )
)

(define-function popup_menu_new
  (is-constructor-of "GnomePopupMenu")
  (c-name "gnome_popup_menu_new")
  (return-type "GtkWidget*")
  (parameters
    '("GnomeUIInfo*" "uiinfo")
  )
)

(define-function popup_menu_new_with_accelgroup
  (is-constructor-of "GnomePopupMenu")
  (c-name "gnome_popup_menu_new_with_accelgroup")
  (return-type "GtkWidget*")
  (parameters
    '("GnomeUIInfo*" "uiinfo")
    '("GtkAccelGroup*" "accelgroup")
  )
)

(define-function popup_menu_get_accel_group
  (c-name "gnome_popup_menu_get_accel_group")
  (return-type "GtkAccelGroup*")
  (parameters
    '("GtkMenu*" "menu")
  )
)

(define-function popup_menu_attach
  (c-name "gnome_popup_menu_attach")
  (return-type "none")
  (parameters
    '("GtkWidget*" "popup")
    '("GtkWidget*" "widget")
    '("gpointer" "user_data")
  )
)

(define-function popup_menu_do_popup
  (c-name "gnome_popup_menu_do_popup")
  (return-type "none")
  (parameters
    '("GtkWidget*" "popup")
    '("GtkMenuPositionFunc" "pos_func")
    '("gpointer" "pos_data")
    '("GdkEventButton*" "event")
    '("gpointer" "user_data")
    '("GtkWidget*" "for_widget")
  )
)

(define-function popup_menu_do_popup_modal
  (c-name "gnome_popup_menu_do_popup_modal")
  (return-type "int")
  (parameters
    '("GtkWidget*" "popup")
    '("GtkMenuPositionFunc" "pos_func")
    '("gpointer" "pos_data")
    '("GdkEventButton*" "event")
    '("gpointer" "user_data")
    '("GtkWidget*" "for_widget")
  )
)

(define-function popup_menu_append
  (c-name "gnome_popup_menu_append")
  (return-type "none")
  (parameters
    '("GtkWidget*" "popup")
    '("GnomeUIInfo*" "uiinfo")
  )
)

(define-function gtk_widget_add_popup_items
  (c-name "gnome_gtk_widget_add_popup_items")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
    '("GnomeUIInfo*" "uiinfo")
    '("gpointer" "user_data")
  )
)

(define-function property_box_get_type
  (c-name "gnome_property_box_get_type")
  (return-type "GType")
)

(define-function property_box_new
  (is-constructor-of "GnomePropertyBox")
  (c-name "gnome_property_box_new")
  (return-type "GtkWidget*")
)

(define-method changed
  (of-object "GnomePropertyBox")
  (c-name "gnome_property_box_changed")
  (return-type "none")
)

(define-method set_modified
  (of-object "GnomePropertyBox")
  (c-name "gnome_property_box_set_modified")
  (return-type "none")
  (parameters
    '("gboolean" "state")
  )
)

(define-method append_page
  (of-object "GnomePropertyBox")
  (c-name "gnome_property_box_append_page")
  (return-type "gint")
  (parameters
    '("GtkWidget*" "child")
    '("GtkWidget*" "tab_label")
  )
)

(define-method set_state
  (of-object "GnomePropertyBox")
  (c-name "gnome_property_box_set_state")
  (return-type "none")
  (parameters
    '("gboolean" "state")
  )
)

(define-function scores_get_type
  (c-name "gnome_scores_get_type")
  (return-type "GType")
)

(define-function scores_display
  (c-name "gnome_scores_display")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "title")
    '("const-gchar*" "app_name")
    '("const-gchar*" "level")
    '("int" "pos")
  )
)

(define-function scores_display_with_pixmap
  (c-name "gnome_scores_display_with_pixmap")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "pixmap_logo")
    '("const-gchar*" "app_name")
    '("const-gchar*" "level")
    '("int" "pos")
  )
)

(define-function scores_new
  (is-constructor-of "GnomeScores")
  (c-name "gnome_scores_new")
  (return-type "GtkWidget*")
  (parameters
    '("guint" "n_scores")
    '("gchar**" "names")
    '("gfloat*" "scores")
    '("time_t*" "times")
  )
)

(define-method construct
  (of-object "GnomeScores")
  (c-name "gnome_scores_construct")
  (return-type "none")
  (parameters
    '("guint" "n_scores")
    '("gchar**" "names")
    '("gfloat*" "scores")
    '("time_t*" "times")
    '("gboolean" "clear")
  )
)

(define-method set_logo_label
  (of-object "GnomeScores")
  (c-name "gnome_scores_set_logo_label")
  (return-type "none")
  (parameters
    '("const-gchar*" "txt")
    '("const-gchar*" "font")
    '("GdkColor*" "col")
  )
)

(define-method set_logo_pixmap
  (of-object "GnomeScores")
  (c-name "gnome_scores_set_logo_pixmap")
  (return-type "none")
  (parameters
    '("const-gchar*" "pix_name")
  )
)

(define-method set_logo_widget
  (of-object "GnomeScores")
  (c-name "gnome_scores_set_logo_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "w")
  )
)

(define-method set_color
  (of-object "GnomeScores")
  (c-name "gnome_scores_set_color")
  (return-type "none")
  (parameters
    '("guint" "pos")
    '("GdkColor*" "col")
  )
)

(define-method set_def_color
  (of-object "GnomeScores")
  (c-name "gnome_scores_set_def_color")
  (return-type "none")
  (parameters
    '("GdkColor*" "col")
  )
)

(define-method set_colors
  (of-object "GnomeScores")
  (c-name "gnome_scores_set_colors")
  (return-type "none")
  (parameters
    '("GdkColor*" "col")
  )
)

(define-method set_logo_label_title
  (of-object "GnomeScores")
  (c-name "gnome_scores_set_logo_label_title")
  (return-type "none")
  (parameters
    '("const-gchar*" "txt")
  )
)

(define-method set_current_player
  (of-object "GnomeScores")
  (c-name "gnome_scores_set_current_player")
  (return-type "none")
  (parameters
    '("gint" "i")
  )
)

(define-function theme_file_parse_error_quark
  (c-name "gnome_theme_file_parse_error_quark")
  (return-type "GQuark")
)

(define-function theme_file_new_from_string
  (c-name "gnome_theme_file_new_from_string")
  (return-type "GnomeThemeFile*")
  (parameters
    '("char*" "data")
    '("GError**" "error")
  )
)

(define-method to_string
  (of-object "GnomeThemeFile")
  (c-name "gnome_theme_file_to_string")
  (return-type "char*")
)

(define-method free
  (of-object "GnomeThemeFile")
  (c-name "gnome_theme_file_free")
  (return-type "none")
)

(define-method foreach_section
  (of-object "GnomeThemeFile")
  (c-name "gnome_theme_file_foreach_section")
  (return-type "none")
  (parameters
    '("GnomeThemeFileSectionFunc" "func")
    '("gpointer" "user_data")
  )
)

(define-method foreach_key
  (of-object "GnomeThemeFile")
  (c-name "gnome_theme_file_foreach_key")
  (return-type "none")
  (parameters
    '("const-char*" "section")
    '("gboolean" "include_localized")
    '("GnomeThemeFileLineFunc" "func")
    '("gpointer" "user_data")
  )
)

(define-method get_raw
  (of-object "GnomeThemeFile")
  (c-name "gnome_theme_file_get_raw")
  (return-type "gboolean")
  (parameters
    '("const-char*" "section")
    '("const-char*" "keyname")
    '("const-char*" "locale")
    '("char**" "val")
  )
)

(define-method get_integer
  (of-object "GnomeThemeFile")
  (c-name "gnome_theme_file_get_integer")
  (return-type "gboolean")
  (parameters
    '("const-char*" "section")
    '("const-char*" "keyname")
    '("int*" "val")
  )
)

(define-method get_string
  (of-object "GnomeThemeFile")
  (c-name "gnome_theme_file_get_string")
  (return-type "gboolean")
  (parameters
    '("const-char*" "section")
    '("const-char*" "keyname")
    '("char**" "val")
  )
)

(define-method get_locale_string
  (of-object "GnomeThemeFile")
  (c-name "gnome_theme_file_get_locale_string")
  (return-type "gboolean")
  (parameters
    '("const-char*" "section")
    '("const-char*" "keyname")
    '("char**" "val")
  )
)

(define-function thumbnail_factory_get_type
  (c-name "gnome_thumbnail_factory_get_type")
  (return-type "GType")
)

(define-function thumbnail_factory_new
  (is-constructor-of "GnomeThumbnailFactory")
  (c-name "gnome_thumbnail_factory_new")
  (return-type "GnomeThumbnailFactory*")
  (parameters
    '("GnomeThumbnailSize" "size")
  )
)

(define-method lookup
  (of-object "GnomeThumbnailFactory")
  (c-name "gnome_thumbnail_factory_lookup")
  (return-type "char*")
  (parameters
    '("const-char*" "uri")
    '("time_t" "mtime")
  )
)

(define-method has_valid_failed_thumbnail
  (of-object "GnomeThumbnailFactory")
  (c-name "gnome_thumbnail_factory_has_valid_failed_thumbnail")
  (return-type "gboolean")
  (parameters
    '("const-char*" "uri")
    '("time_t" "mtime")
  )
)

(define-method can_thumbnail
  (of-object "GnomeThumbnailFactory")
  (c-name "gnome_thumbnail_factory_can_thumbnail")
  (return-type "gboolean")
  (parameters
    '("const-char*" "uri")
    '("const-char*" "mime_type")
    '("time_t" "mtime")
  )
)

(define-method generate_thumbnail
  (of-object "GnomeThumbnailFactory")
  (c-name "gnome_thumbnail_factory_generate_thumbnail")
  (return-type "GdkPixbuf*")
  (parameters
    '("const-char*" "uri")
    '("const-char*" "mime_type")
  )
)

(define-method save_thumbnail
  (of-object "GnomeThumbnailFactory")
  (c-name "gnome_thumbnail_factory_save_thumbnail")
  (return-type "none")
  (parameters
    '("GdkPixbuf*" "thumbnail")
    '("const-char*" "uri")
    '("time_t" "original_mtime")
  )
)

(define-method create_failed_thumbnail
  (of-object "GnomeThumbnailFactory")
  (c-name "gnome_thumbnail_factory_create_failed_thumbnail")
  (return-type "none")
  (parameters
    '("const-char*" "uri")
    '("time_t" "mtime")
  )
)

(define-function thumbnail_has_uri
  (c-name "gnome_thumbnail_has_uri")
  (return-type "gboolean")
  (parameters
    '("GdkPixbuf*" "pixbuf")
    '("const-char*" "uri")
  )
)

(define-function thumbnail_is_valid
  (c-name "gnome_thumbnail_is_valid")
  (return-type "gboolean")
  (parameters
    '("GdkPixbuf*" "pixbuf")
    '("const-char*" "uri")
    '("time_t" "mtime")
  )
)

(define-function thumbnail_md5
  (c-name "gnome_thumbnail_md5")
  (return-type "char*")
  (parameters
    '("const-char*" "uri")
  )
)

(define-function thumbnail_path_for_uri
  (c-name "gnome_thumbnail_path_for_uri")
  (return-type "char*")
  (parameters
    '("const-char*" "uri")
    '("GnomeThumbnailSize" "size")
  )
)

(define-function thumbnail_scale_down_pixbuf
  (c-name "gnome_thumbnail_scale_down_pixbuf")
  (return-type "GdkPixbuf*")
  (parameters
    '("GdkPixbuf*" "pixbuf")
    '("int" "dest_width")
    '("int" "dest_height")
  )
)

(define-function libgnomeui_module_info_get
  (c-name "libgnomeui_module_info_get")
  (return-type "const-GnomeModuleInfo*")
)

(define-function gtk_module_info_get
  (c-name "gnome_gtk_module_info_get")
  (return-type "const-GnomeModuleInfo*")
)

(define-function init_with_popt_table
  (c-name "gnome_init_with_popt_table")
  (return-type "int")
  (parameters
    '("const-char*" "app_id")
    '("const-char*" "app_version")
    '("int" "argc")
    '("char**" "argv")
    '("const-struct-poptOption*" "options")
    '("int" "flags")
    '("poptContext*" "return_ctx")
  )
)

(define-function url_show_on_screen
  (c-name "gnome_url_show_on_screen")
  (return-type "gboolean")
  (parameters
    '("const-char*" "url")
    '("GdkScreen*" "screen")
    '("GError**" "error")
  )
)

(define-function gdk_pixbuf_new_from_uri
  (c-name "gnome_gdk_pixbuf_new_from_uri")
  (return-type "GdkPixbuf*")
  (parameters
    '("const-char*" "uri")
  )
)

(define-function gdk_pixbuf_new_from_uri_async
  (c-name "gnome_gdk_pixbuf_new_from_uri_async")
  (return-type "GnomeGdkPixbufAsyncHandle*")
  (parameters
    '("const-char*" "uri")
    '("GnomeGdkPixbufLoadCallback" "load_callback")
    '("GnomeGdkPixbufDoneCallback" "done_callback")
    '("gpointer" "callback_data")
  )
)

(define-function gdk_pixbuf_new_from_uri_cancel
  (c-name "gnome_gdk_pixbuf_new_from_uri_cancel")
  (return-type "none")
  (parameters
    '("GnomeGdkPixbufAsyncHandle*" "handle")
  )
)

(define-function window_icon_set_from_default
  (c-name "gnome_window_icon_set_from_default")
  (return-type "none")
  (parameters
    '("GtkWindow*" "w")
  )
)

(define-function window_icon_set_from_file
  (c-name "gnome_window_icon_set_from_file")
  (return-type "none")
  (parameters
    '("GtkWindow*" "w")
    '("const-char*" "filename")
  )
)

(define-function window_icon_set_from_file_list
  (c-name "gnome_window_icon_set_from_file_list")
  (return-type "none")
  (parameters
    '("GtkWindow*" "w")
    '("const-char**" "filenames")
  )
)

(define-function window_icon_set_default_from_file
  (c-name "gnome_window_icon_set_default_from_file")
  (return-type "none")
  (parameters
    '("const-char*" "filename")
  )
)

(define-function window_icon_set_default_from_file_list
  (c-name "gnome_window_icon_set_default_from_file_list")
  (return-type "none")
  (parameters
    '("const-char**" "filenames")
  )
)

(define-function window_icon_init
  (c-name "gnome_window_icon_init")
  (return-type "none")
)

(define-function window_toplevel_set_title
  (c-name "gnome_window_toplevel_set_title")
  (return-type "none")
  (parameters
    '("GtkWindow*" "window")
    '("const-gchar*" "doc_name")
    '("const-gchar*" "app_name")
    '("const-gchar*" "extension")
  )
)

(define-function ui_info_type_get_type
  (c-name "gnome_ui_info_type_get_type")
  (return-type "GType")
)

(define-function ui_info_configurable_types_get_type
  (c-name "gnome_ui_info_configurable_types_get_type")
  (return-type "GType")
)

(define-function ui_pixmap_type_get_type
  (c-name "gnome_ui_pixmap_type_get_type")
  (return-type "GType")
)

(define-function interact_style_get_type
  (c-name "gnome_interact_style_get_type")
  (return-type "GType")
)

(define-function dialog_type_get_type
  (c-name "gnome_dialog_type_get_type")
  (return-type "GType")
)

(define-function save_style_get_type
  (c-name "gnome_save_style_get_type")
  (return-type "GType")
)

(define-function restart_style_get_type
  (c-name "gnome_restart_style_get_type")
  (return-type "GType")
)

(define-function client_state_get_type
  (c-name "gnome_client_state_get_type")
  (return-type "GType")
)

(define-function client_flags_get_type
  (c-name "gnome_client_flags_get_type")
  (return-type "GType")
)

(define-function date_edit_flags_get_type
  (c-name "gnome_date_edit_flags_get_type")
  (return-type "GType")
)

(define-function edge_position_get_type
  (c-name "gnome_edge_position_get_type")
  (return-type "GType")
)

(define-function font_picker_mode_get_type
  (c-name "gnome_font_picker_mode_get_type")
  (return-type "GType")
)

(define-function icon_list_mode_get_type
  (c-name "gnome_icon_list_mode_get_type")
  (return-type "GType")
)

(define-function icon_lookup_flags_get_type
  (c-name "gnome_icon_lookup_flags_get_type")
  (return-type "GType")
)

(define-function icon_lookup_result_flags_get_type
  (c-name "gnome_icon_lookup_result_flags_get_type")
  (return-type "GType")
)

(define-function mdi_mode_get_type
  (c-name "gnome_mdi_mode_get_type")
  (return-type "GType")
)

(define-function password_dialog_remember_get_type
  (c-name "gnome_password_dialog_remember_get_type")
  (return-type "GType")
)

(define-function thumbnail_size_get_type
  (c-name "gnome_thumbnail_size_get_type")
  (return-type "GType")
)

(define-function preferences_type_get_type
  (c-name "gnome_preferences_type_get_type")
  (return-type "GType")
)

