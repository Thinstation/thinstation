--- nss-3.43/nss/lib/pk11wrap/pk11util.c	2019-03-15 20:25:08.000000000 -0400
+++ nss-3.42.1/nss/lib/pk11wrap/pk11util.c	2019-01-31 12:41:49.000000000 -0500
@@ -95,31 +95,6 @@
     return SECSuccess;
 }
 
-int
-secmod_GetSystemFIPSEnabled(void)
-{
-#ifdef LINUX
-    FILE *f;
-    char d;
-    size_t size;
-
-    f = fopen("/proc/sys/crypto/fips_enabled", "r");
-    if (!f) {
-        return 0;
-    }
-
-    size = fread(&d, 1, sizeof(d), f);
-    fclose(f);
-    if (size != sizeof(d)) {
-        return 0;
-    }
-    if (d == '1') {
-        return 1;
-    }
-#endif
-    return 0;
-}
-
 /*
  * retrieve the internal module
  */
@@ -453,7 +428,7 @@
     SECMODModuleList **mlpp;
     SECStatus rv = SECFailure;
 
-    if (secmod_GetSystemFIPSEnabled() || pendingModule) {
+    if (pendingModule) {
         PORT_SetError(SEC_ERROR_MODULE_STUCK);
         return rv;
     }
@@ -988,7 +963,7 @@
 #ifdef NSS_FIPS_DISABLED
     return PR_FALSE;
 #else
-    return (PRBool)((pendingModule == NULL) && !secmod_GetSystemFIPSEnabled());
+    return (PRBool)(pendingModule == NULL);
 #endif
 }
 
--- nss-3.43/nss/lib/pk11wrap/secmodi.h	2019-03-15 20:25:08.000000000 -0400
+++ nss-3.42.1/nss/lib/pk11wrap/secmodi.h	2019-01-31 12:41:49.000000000 -0500
@@ -115,13 +115,6 @@
 CK_MECHANISM_TYPE pk11_GetPBECryptoMechanism(SECAlgorithmID *algid,
                                              SECItem **param, SECItem *pwd, PRBool faulty3DES);
 
-/* Get the state of the system FIPS mode */
-/* NSS uses this to force FIPS mode if the system bit is on. Applications which
- * use the SECMOD_CanDeleteInteral() to check to see if they can switch to or
- * from FIPS mode will automatically be told that they can't swith out of FIPS
- * mode */
-int secmod_GetSystemFIPSEnabled();
-
 extern void pk11sdr_Init(void);
 extern void pk11sdr_Shutdown(void);
 
--- nss-3.43/nss/lib/pk11wrap/pk11pars.c	2019-03-15 20:25:08.000000000 -0400
+++ nss-3.42.1/nss/lib/pk11wrap/pk11pars.c	2019-01-31 12:41:49.000000000 -0500
@@ -815,10 +807,6 @@
 
     mod->internal = NSSUTIL_ArgHasFlag("flags", "internal", nssc);
     mod->isFIPS = NSSUTIL_ArgHasFlag("flags", "FIPS", nssc);
-    /* if the system FIPS mode is enabled, force FIPS to be on */
-    if (secmod_GetSystemFIPSEnabled()) {
-        mod->isFIPS = PR_TRUE;
-    }
     mod->isCritical = NSSUTIL_ArgHasFlag("flags", "critical", nssc);
     slotParams = NSSUTIL_ArgGetParamValue("slotParams", nssc);
     mod->slotInfo = NSSUTIL_ArgParseSlotInfo(mod->arena, slotParams,
